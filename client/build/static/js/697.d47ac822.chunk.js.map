{"version":3,"file":"static/js/697.d47ac822.chunk.js","mappings":"qVAuBe,SAASA,IACtB,IAAAC,GAAoCC,EAAAA,EAAAA,KAA5BC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAOJ,EAAPI,QAExB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAACC,GAAG,cAAcC,GAAI,EAAEC,SAAA,EAC1BJ,EAAAA,EAAAA,MAACK,EAAAA,EAAI,CAACC,EAAG,GAAIC,WAAY,SAAUC,eAAgB,gBAAgBJ,SAAA,EACjEK,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACTC,KAAM,KACNC,GAAG,SACHC,KAAMhB,GAASY,EAAAA,EAAAA,KAACK,EAAAA,EAAS,KAAML,EAAAA,EAAAA,KAACM,EAAAA,EAAa,IAC7C,aAAY,YACZC,QAAS,CAAEC,GAAI,QACfC,QAASrB,EAASE,EAAUD,KAE9BE,EAAAA,EAAAA,MAACmB,EAAAA,EAAM,CAACC,QAAS,EAAGb,WAAY,SAASH,SAAA,EACvCJ,EAAAA,EAAAA,MAACqB,EAAAA,EAAI,CAACC,GAAIC,EAAAA,GAAYC,GAAG,IAAIC,OAAQ,CAAEC,UAAW,OAAQtB,SAAA,EACxDK,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CAACrB,EAAE,QAAQsB,GAAG,MAClBC,UAAU,QAAQC,IAAKC,EAAWC,IAAI,SAAS,QAEnDhC,EAAAA,EAAAA,MAACmB,EAAAA,EAAM,CACLG,GAAI,MACJV,GAAG,SACHQ,QAAS,EACTa,cAAe,MACfjB,QAAS,CAAEkB,KAAMrC,EAAS,OAAS,OAAQoB,GAAI,OAAQkB,GAAI,QAAS/B,SAAA,EAEpEK,EAAAA,EAAAA,KAAC2B,EAAO,CAACC,MAAM,YAAYC,OAAQ,CACjC,CAAEC,KAAM,gBAAiBC,MAAO,4BAChC,CAAED,KAAM,YAAaC,MAAO,wBAC5B,CAAED,KAAM,UAAWC,MAAO,uBAC1B,CAAED,KAAM,wBAAyBC,MAAO,2BAK1C/B,EAAAA,EAAAA,KAAC2B,EAAO,CAACC,MAAM,QAAQC,OAAQ,CAC7B,CAAEC,KAAM,WAAYC,MAAO,eAC3B,CAAED,KAAM,eAAgBC,MAAO,qBAGjC/B,EAAAA,EAAAA,KAAC2B,EAAO,CAACC,MAAM,YAAYC,OAAQ,CACjC,CAAEC,KAAM,MAAOC,MAAO,aACtB,CAAED,KAAM,WAAYC,MAAO,kBAC3B,CAAED,KAAM,qBAAsBC,MAAO,uBAK3C/B,EAAAA,EAAAA,KAACgC,EAAAA,EAAY,CAACnB,GAAIC,EAAAA,GAAYC,GAAG,WAAWkB,QAAQ,UAAU/B,KAAM,KAAMC,GAAG,SAAQR,SAAC,iBAEvFP,GACCY,EAAAA,EAAAA,KAACR,EAAAA,GAAG,CAAC0C,GAAI,EAAG3B,QAAS,CAAEC,GAAI,QAASb,UAClCJ,EAAAA,EAAAA,MAAC4C,EAAAA,EAAK,CAACtB,GAAI,MAAOF,QAAS,EAAEhB,SAAA,EAC3BK,EAAAA,EAAAA,KAAC2B,EAAO,CAACC,MAAM,YAAYC,OAAQ,CACjC,CAAEC,KAAM,gBAAiBC,MAAO,4BAChC,CAAED,KAAM,YAAaC,MAAO,wBAC5B,CAAED,KAAM,UAAWC,MAAO,uBAC1B,CAAED,KAAM,wBAAyBC,MAAO,2BAK1C/B,EAAAA,EAAAA,KAAC2B,EAAO,CAACC,MAAM,QAAQC,OAAQ,CAC7B,CAAEC,KAAM,WAAYC,MAAO,eAC3B,CAAED,KAAM,aAAcC,MAAO,qBAG/B/B,EAAAA,EAAAA,KAAC2B,EAAO,CAACC,MAAM,YAAYC,OAAQ,CACjC,CAAEC,KAAM,MAAOC,MAAO,aACtB,CAAED,KAAM,WAAYC,MAAO,kBAC3B,CAAED,KAAM,qBAAsBC,MAAO,qBAKzC,OAGV,CAEA,IAAMJ,EAAU,SAAHS,GAA2B,IAArBR,EAAKQ,EAALR,MAAOC,EAAMO,EAANP,OAClBpC,GAAK4C,EAAAA,EAAAA,IAAkB,WAAY,YACzC,OACErC,EAAAA,EAAAA,KAACsC,EAAAA,EAAI,CAAA3C,SACF,SAAA4C,GAASA,EAANnD,OAAM,OACRG,EAAAA,EAAAA,MAAAiD,EAAAA,SAAA,CAAA7C,SAAA,EACEJ,EAAAA,EAAAA,MAACkD,EAAAA,EAAU,CACT5B,GAAID,EAAAA,EACJlB,GAAI,EACJgD,GAAI,EACJC,QAAS,KACTC,WAAY,eACZC,UAAW,CAAEpD,GAAAA,GACbuB,OAAQ,CAAEvB,GAAAA,GAAKE,SAAA,CACdiC,EAAM,KAAC5B,EAAAA,EAAAA,KAAC8C,EAAAA,EAAe,CAACC,GAAI,QAE/B/C,EAAAA,EAAAA,KAACgD,EAAAA,EAAQ,CAAArD,SACNkC,EAAOoB,KAAI,SAACC,EAAMC,GAAG,OACpBnD,EAAAA,EAAAA,KAACoD,EAAAA,EAAQ,CAACvC,GAAIC,EAAAA,GAAYC,GAAImC,EAAKnB,MAAMpC,SACtCuD,EAAKpB,MADuCqB,EAEpC,QAGd,GAIX,C,6PC1BA,EAnGmB,WAAO,IAADf,EACfiB,GAAQC,EAAAA,EAAAA,KAIdC,GAAgCC,EAAAA,EAAAA,UAAS,CACrCC,UAAW,GACXC,SAAU,GACVC,MAAO,KACPC,GAAAC,EAAAA,EAAAA,GAAAN,EAAA,GAJGO,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GA+C5B,OACI5D,EAAAA,EAAAA,KAACR,EAAAA,GAAG,CACAwE,KAAK,IACLC,SAAS,WACTC,UAAU,OACVC,OAAO,OACPC,SAAS,QACTC,UAAU,OAEVlE,GAAI,EAAE,GACNmE,GAAG,MAEHC,EAAG,EACH9E,GAAG,WACH+E,aAAa,KACbvD,UAAU,KACVV,QAAQ,OACRZ,UAIAK,EAAAA,EAAAA,KAACR,EAAAA,GAAG,CAACqB,GAAG,OAAO4D,SArDL,SAAAC,GAAA,OAAAtC,EAAAA,IAAAuC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAC,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIgB,GAHzCN,EAAEO,iBAEIN,EAAOD,EAAEQ,QACKP,EAAKQ,gBAET,CAADL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGgBI,EAAAA,EAAMC,KAAK,GAADC,OAAIC,wBAA6B,wBAAwB9B,GAAS,OAA7FmB,EAAQE,EAAAU,KACdC,QAAQC,IAAId,GAASE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAErBW,QAAQG,MAAMd,EAAAa,GAAIE,SAAQ,QAG9B7C,EAAM,CACFzB,MAAO,aACPuE,YAAa,4CACbC,OAAQ,UACRC,SAAU,IACVC,YAAY,IAIhBvC,EAAY,CACRN,UAAW,GACXC,SAAU,GACVC,MAAO,KACN,yBAAAwB,EAAAoB,OAAA,GAAAzB,EAAA,oBAEZ0B,MAAA,KAAAC,UAAA,EAuB6C9G,UAClCJ,EAAAA,EAAAA,MAACmH,EAAAA,EAAM,CAAC/F,QAAS,EAAEhB,SAAA,EACfK,EAAAA,EAAAA,KAAC2G,EAAAA,EAAI,CAACC,WAAY,MAAOC,SAAU,KAAMC,GAAI,EAAEnH,SAAC,gBAChDK,EAAAA,EAAAA,KAAA,UACIqB,IAAI,4EACJ,eAAa,gBACb0F,OAAO,KACPnF,MAAM,SACNoF,YAAY,IACZC,UAAU,KACVC,MAAO,CACL/C,OAAQ,EACRK,aAAc,iBACd2C,gBAAiB,uBAW3C,ECtFMC,EAAa,SAAHhF,GAAsB,IAAhBzC,EAAQyC,EAARzC,SACpB,OACEK,EAAAA,EAAAA,KAAC2G,EAAAA,EAAI,CAACC,WAAY,MAAOC,SAAU,KAAMC,GAAI,EAAEnH,SAC5CA,GAGP,EAEM0H,EAAe,SAAH9E,GAAiC,IAA5B5C,EAAQ4C,EAAR5C,SAAU2H,EAAK/E,EAAL+E,MAAOC,EAAIhF,EAAJgF,KACtC,OACEhI,EAAAA,EAAAA,MAACiI,EAAAA,EAAOC,OAAM,CACZhI,IAAI4C,EAAAA,EAAAA,IAAkB,iBAAkB,kBACxCM,QAAS,OACT+E,EAAG,EACH7H,EAAG,EACH8H,OAAQ,UACR9G,GAAI,IACJ0G,KAAMA,EACNhH,QAAS,cACTT,WAAY,SACZC,eAAgB,SAChB6C,WAAY,uBACZ5B,OAAQ,CACNvB,IAAI4C,EAAAA,EAAAA,IAAkB,iBAAkB,mBACxC1C,SAAA,EACFK,EAAAA,EAAAA,KAAC4H,EAAAA,GAAc,CAAAjI,SAAE2H,IAChB3H,IAGP,EAEe,SAASkI,IACtB,OACEtI,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAAC2B,GAAI,EACP1B,IAAI4C,EAAAA,EAAAA,IAAkB,UAAW,YACjCyF,OAAOzF,EAAAA,EAAAA,IAAkB,WAAY,YAAY1C,SAAA,EACjDK,EAAAA,EAAAA,KAAC+H,EAAAA,EAAS,CAAClH,GAAIsB,EAAAA,EAAO6F,KAAM,MAAOtF,GAAI,GAAG/C,UACxCJ,EAAAA,EAAAA,MAAC0I,EAAAA,EAAU,CAACC,QAAS,CAAEzG,KAAM,EAAGC,GAAI,EAAGlB,GAAI,GAAKG,QAAS,EAAEhB,SAAA,EACzDJ,EAAAA,EAAAA,MAAC4C,EAAAA,EAAK,CAACgG,MAAO,aAAaxI,SAAA,EACzBK,EAAAA,EAAAA,KAACoH,EAAU,CAAAzH,SAAC,mBACZK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAC2G,KAAM,IAAI5H,SAAC,cACjBK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAC2G,KAAM,gBAAgB5H,SAAC,gBAC7BK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAC2G,KAAM,IAAI5H,SAAC,oCAGnBJ,EAAAA,EAAAA,MAAC4C,EAAAA,EAAK,CAACgG,MAAO,aAAaxI,SAAA,EACzBK,EAAAA,EAAAA,KAACoH,EAAU,CAAAzH,SAAC,eACZK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAC2G,KAAM,YAAY5H,SAAC,SACzBK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAC2G,KAAM,iBAAiB5H,SAAC,cAC9BK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAC2G,KAAM,YAAY5H,SAAC,wBACzBK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAC2G,KAAM,cAAc5H,SAAC,qBAG7BJ,EAAAA,EAAAA,MAAC4C,EAAAA,EAAK,CAACgG,MAAO,aAAaxI,SAAA,EACzBK,EAAAA,EAAAA,KAACoH,EAAU,CAAAzH,SAAC,WACZK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAC2G,KAAM,IAAI5H,SAAC,oBACjBK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAC2G,KAAM,IAAI5H,SAAC,yBAInBK,EAAAA,EAAAA,KAACmC,EAAAA,EAAK,CAACgG,MAAO,aAAaxI,UACnCK,EAAAA,EAAAA,KAACoI,EAAU,YAKPpI,EAAAA,EAAAA,KAACR,EAAAA,GAAG,CACN6I,eAAgB,EAChBC,YAAa,QACbC,aAAalG,EAAAA,EAAAA,IAAkB,WAAY,YAAY1C,UACvDJ,EAAAA,EAAAA,MAACwI,EAAAA,EAAS,CACRlH,GAAIsB,EAAAA,EACJ6F,KAAM,MACNtF,GAAI,EACJ8F,UAAW,CAAE/G,KAAM,SAAUjB,GAAI,OACjCG,QAAS,EACT8H,QAAS,CAAEjI,GAAI,iBACf2H,MAAO,CAAE3H,GAAI,UAAWb,SAAA,EACxBJ,EAAAA,EAAAA,MAACoH,EAAAA,EAAI,CAACE,SAAS,KAAIlH,SAAA,CAAC,cAAOK,EAAAA,EAAAA,KAAA,KAAAL,SAAG,sCAAqC,uEAGzEJ,EAAAA,EAAAA,MAACoH,EAAAA,EAAI,CAACE,SAAS,KAAIlH,SAAA,CAAC,eACTK,EAAAA,EAAAA,KAAA,KAAGuH,KAAK,kCAAkCL,MAAO,CAACN,WAAY,QAAQjH,SAAC,oBAAmB,QAErGJ,EAAAA,EAAAA,MAACoH,EAAAA,EAAI,CAACE,SAAS,KAAIlH,SAAA,CAAC,eACTK,EAAAA,EAAAA,KAAA,KAAGuH,KAAK,uDAAuDL,MAAO,CAACN,WAAY,QAAQjH,SAAC,uBAGvGK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAACiG,SAAS,KAAKU,KAAM,gBAAiBL,MAAO,CAACN,WAAY,QAAQjH,SAAC,WAClEJ,EAAAA,EAAAA,MAAC4C,EAAAA,EAAK,CAACqG,UAAW,MAAO7H,QAAS,EAAEhB,SAAA,EAClCK,EAAAA,EAAAA,KAACqH,EAAY,CAACC,MAAO,UAAWC,KAAM,IAAI5H,UACxCK,EAAAA,EAAAA,KAAC0I,EAAAA,IAAU,OAKb1I,EAAAA,EAAAA,KAACqH,EAAY,CAACC,MAAO,YAAaC,KAAM,IAAI5H,UAC1CK,EAAAA,EAAAA,KAAC2I,EAAAA,IAAW,gBAOtB,C,iVCpFe,SAASC,IAAW,IAADxG,EAChCmB,GAAwBC,EAAAA,EAAAA,UAAS,IAAGI,GAAAC,EAAAA,EAAAA,GAAAN,EAAA,GAA7BzB,EAAI8B,EAAA,GAAEiF,EAAOjF,EAAA,GACpBkF,GAA0BtF,EAAAA,EAAAA,UAAS,IAAGuF,GAAAlF,EAAAA,EAAAA,GAAAiF,EAAA,GAA/BnF,EAAKoF,EAAA,GAAEC,EAAQD,EAAA,GACtBE,GAA8BzF,EAAAA,EAAAA,UAAS,IAAG0F,GAAArF,EAAAA,EAAAA,GAAAoF,EAAA,GAAnC/C,EAAOgD,EAAA,GAAEC,EAAUD,EAAA,GACpB7F,GAAQC,EAAAA,EAAAA,KAwCd,OACEtD,EAAAA,EAAAA,KAACJ,EAAAA,EAAI,CAAAD,UACHK,EAAAA,EAAAA,KAACR,EAAAA,GAAG,CACFC,GAAG,WAEHqI,MAAM,QACNtD,aAAa,KACb4E,EAAG,CAAE1H,GAAI,EAAGlB,GAAI,EAAG6I,GAAI,IACvB9E,EAAG,CAAE7C,GAAI,EAAGlB,GAAI,EAAG6I,GAAI,IAAK1J,UAC5BK,EAAAA,EAAAA,KAACR,EAAAA,GAAG,CAAC+E,EAAG,EAAE5E,UACRJ,EAAAA,EAAAA,MAAC+J,EAAAA,EAAI,CAAC3I,QAAS,CAAEc,KAAM,GAAIC,GAAI,EAAGlB,GAAI,EAAG6I,GAAI,IAAK1J,SAAA,EAChDK,EAAAA,EAAAA,KAACuJ,EAAAA,EAAQ,CAAA5J,UACPJ,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAAAG,SAAA,EACFK,EAAAA,EAAAA,KAACwJ,EAAAA,EAAO,CAAC1B,MAAM,UAASnI,SAAE,aAC1BK,EAAAA,EAAAA,KAAC2G,EAAAA,EAAI,CAACxG,GAAI,CAAEuB,GAAI,EAAGlB,GAAI,EAAG6I,GAAI,GAAKvB,MAAM,UAASnI,SAAC,uCAGnDK,EAAAA,EAAAA,KAACR,EAAAA,GAAG,CAACkD,GAAI,CAAEjB,KAAM,EAAGC,GAAI,EAAGlB,GAAI,EAAG6I,GAAI,IAAK1J,UACzCJ,EAAAA,EAAAA,MAACmH,EAAAA,EAAM,CAAC+C,GAAI,EAAG9I,QAAS,EAAGb,WAAW,aAAYH,SAAA,EAChDK,EAAAA,EAAAA,KAAC0J,EAAAA,EAAM,CACLxJ,KAAK,KACL6G,OAAO,OACP4C,MAAM,QACN1H,QAAQ,QACR6F,MAAM,UACN9G,OAAQ,CAAE4I,OAAQ,qBAClBC,UAAU7J,EAAAA,EAAAA,KAAC8J,EAAAA,IAAO,CAAChC,MAAM,UAAU5H,KAAK,SAAUP,SAAC,mBAGrDK,EAAAA,EAAAA,KAAC0J,EAAAA,EAAM,CACLxJ,KAAK,KACL6G,OAAO,OACP4C,MAAM,QACN1H,QAAQ,QACR6F,MAAM,UACN9G,OAAQ,CAAE4I,OAAQ,qBAClBC,UAAU7J,EAAAA,EAAAA,KAAC+J,EAAAA,IAAO,CAACjC,MAAM,UAAU5H,KAAK,SAAUP,SAAC,mBAGrDK,EAAAA,EAAAA,KAAC0J,EAAAA,EAAM,CACLxJ,KAAK,KACL6G,OAAO,OACP4C,MAAM,QACN1H,QAAQ,QACR6F,MAAM,UACN9G,OAAQ,CAAE4I,OAAQ,qBAClBC,UAAU7J,EAAAA,EAAAA,KAACgK,EAAAA,IAAY,CAAClC,MAAM,UAAU5H,KAAK,SAAUP,SAAC,2BAK9DJ,EAAAA,EAAAA,MAACmB,EAAAA,EAAM,CACLP,GAAI,CAAEkJ,GAAI,GAAI7I,GAAI,IAClBG,QAAS,EACTjB,GAAI,EACJI,WAAW,aAAYH,SAAA,EACvBK,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACT6H,MAAM,QACN,aAAW,WACX7F,QAAQ,QACR/B,KAAK,KACL+J,SAAS,EACTjJ,OAAQ,CAAEvB,GAAI,WACdW,MAAMJ,EAAAA,EAAAA,KAACkK,EAAAA,IAAU,CAAChK,KAAK,YAEzBF,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACT6H,MAAM,QACN,aAAW,SACX7F,QAAQ,QACR/B,KAAK,KACL+J,SAAS,EACTjJ,OAAQ,CAAEvB,GAAI,WACdW,MAAMJ,EAAAA,EAAAA,KAACmK,EAAAA,IAAQ,CAACjK,KAAK,YAEvBF,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACT6H,MAAM,QACN,aAAW,UACX7F,QAAQ,QACR/B,KAAK,KACL+J,SAAS,EACTjJ,OAAQ,CAAEvB,GAAI,WACdW,MAAMJ,EAAAA,EAAAA,KAACoK,EAAAA,IAAS,CAAClK,KAAK,oBAK9BF,EAAAA,EAAAA,KAACuJ,EAAAA,EAAQ,CAAA5J,UACPK,EAAAA,EAAAA,KAACR,EAAAA,GAAG,CAACC,GAAG,QAAQ+E,aAAa,KAAI7E,UAC/BK,EAAAA,EAAAA,KAACR,EAAAA,GAAG,CAAC4J,EAAG,EAAGtB,MAAM,UAASnI,UACxBK,EAAAA,EAAAA,KAAC0G,EAAAA,EAAM,CAAC/F,QAAS,EAAEhB,UAEnBJ,EAAAA,EAAAA,MAAA,QAAMkF,SAjIR,SAAAC,GAAA,OAAAtC,EAAAA,IAAAuC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAC,OAAAH,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACJ,GAAlBN,EAAEO,mBAEW,KAATxD,EAAwB,KAAV6B,EAA2B,KAAZuC,GAAc,CAAAf,EAAAE,KAAA,QAO1C,OANHhC,EAAM,CACJzB,MAAO,gBACPuE,YAAa,8BACbC,OAAQ,UACRC,SAAU,IACVC,YAAY,IACXnB,EAAAkF,OAAA,wBAAAlF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMoBI,EAAAA,EAAMC,KAAK,GAADC,OAAIC,wBAA6B,kBAAkB,CAClF9D,KAAAA,EAAM6B,MAAAA,EAAOuC,QAAAA,IACf,OAFcf,EAAAU,KAIhBgD,EAAQ,IACRG,EAAS,IACTG,EAAW,IAEX9F,EAAM,CACJzB,MAAO,WACPuE,YAAa,wEACbC,OAAQ,UACRkE,cAAe,MACfjE,SAAU,IACVC,YAAY,IACXnB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAGDW,QAAQC,IAAIZ,EAAAa,GAAIE,SAAQ,yBAAAf,EAAAoB,OAAA,GAAAzB,EAAA,oBAE3B0B,MAAA,KAAAC,UAAA,EA6FwC9G,SAAA,EACvBJ,EAAAA,EAAAA,MAACgL,EAAAA,GAAW,CAACC,GAAG,OAAM7K,SAAA,EACpBK,EAAAA,EAAAA,KAACyK,EAAAA,EAAS,CAAA9K,SAAC,eACXJ,EAAAA,EAAAA,MAACmL,EAAAA,EAAU,CAACnC,YAAY,UAAS5I,SAAA,EAC/BK,EAAAA,EAAAA,KAAC2K,EAAAA,EAAgB,CAACC,cAAc,OAAMjL,UACpCK,EAAAA,EAAAA,KAAC6K,EAAAA,IAAQ,CAAC/C,MAAM,gBAElB9H,EAAAA,EAAAA,KAAC8K,EAAAA,EAAK,CAACC,KAAK,OAAO7K,KAAK,KAAK8K,MAAOlJ,EAAMmJ,SAAU,SAAAlG,GAAC,OAAI8D,EAAQ9D,EAAEQ,OAAOyF,MAAM,WAGpFzL,EAAAA,EAAAA,MAACgL,EAAAA,GAAW,CAACC,GAAG,QAAO7K,SAAA,EACrBK,EAAAA,EAAAA,KAACyK,EAAAA,EAAS,CAAA9K,SAAC,UACXJ,EAAAA,EAAAA,MAACmL,EAAAA,EAAU,CAACnC,YAAY,UAAS5I,SAAA,EAC/BK,EAAAA,EAAAA,KAAC2K,EAAAA,EAAgB,CAACC,cAAc,OAAMjL,UACpCK,EAAAA,EAAAA,KAACkL,EAAAA,IAAc,CAACpD,MAAM,gBAExB9H,EAAAA,EAAAA,KAAC8K,EAAAA,EAAK,CAACC,KAAK,OAAO7K,KAAK,KAAK8K,MAAOrH,EAAOsH,SAAU,SAAAlG,GAAC,OAAIiE,EAASjE,EAAEQ,OAAOyF,MAAM,WAGtFzL,EAAAA,EAAAA,MAACgL,EAAAA,GAAW,CAACC,GAAG,UAAS7K,SAAA,EACvBK,EAAAA,EAAAA,KAACyK,EAAAA,EAAS,CAAA9K,SAAC,aACXK,EAAAA,EAAAA,KAACmL,EAAAA,EAAQ,CACP5C,YAAY,WACZvH,OAAQ,CACNwD,aAAc,YAEhB4G,YAAY,UACZJ,MAAO9E,EAAS+E,SAAU,SAAAlG,GAAC,OAAIoE,EAAWpE,EAAEQ,OAAOyF,MAAM,QAG7DhL,EAAAA,EAAAA,KAACuK,EAAAA,GAAW,CAACC,GAAG,OAAOa,MAAM,QAAO1L,UAClCK,EAAAA,EAAAA,KAACgC,EAAAA,EAAY,CAAC+I,KAAK,SAAS9I,QAAQ,QAAQxC,GAAG,UAAUqI,MAAM,QAAQ9G,OAAQ,CAAC,EAAErB,SAAC,sCAgBzG,C,sBCzKA,EAtCoB,WAChB,OACIJ,EAAAA,EAAAA,MAAAiD,EAAAA,SAAA,CAAA7C,SAAA,EACIJ,EAAAA,EAAAA,MAAC+L,EAAAA,EAAM,CAAA3L,SAAA,EACHK,EAAAA,EAAAA,KAAA,SAAAL,SAAO,wEACPK,EAAAA,EAAAA,KAAA,QAAM8B,KAAK,cAAcyJ,QAAQ,0KACjCvL,EAAAA,EAAAA,KAAA,QAAM8B,KAAK,WAAWyJ,QAAQ,yNAElCvL,EAAAA,EAAAA,KAACf,EAAAA,EAAM,KACPe,EAAAA,EAAAA,KAACR,EAAAA,GAAG,CAACgM,QAAO,OAAA7F,OAAS8F,EAAW,KAAKC,OAAO,QAAQC,MAAM,MAAMvC,EAAE,OAAOvJ,EAAE,UAI3EG,EAAAA,EAAAA,KAACR,EAAAA,GAAG,CACA0C,GAAG,MACHwF,EAAG,CAAEjG,KAAM,OAAQC,GAAI,OAAQlB,GAAI,OACnCoL,GAAI,CAAEnK,KAAM,IAAKC,GAAI,IAAKlB,GAAI,QAC9BqL,QAAQ,QACR1L,GAAG,QACHoE,EAAE,MACFC,aAAa,KACbvD,UAAU,2BACV6F,GAAG,MAAKnH,UAERK,EAAAA,EAAAA,KAAC0G,EAAAA,EAAM,CAACxE,GAAG,IAAGvC,UACVK,EAAAA,EAAAA,KAAC4I,EAAO,SAOhB5I,EAAAA,EAAAA,KAAC8L,EAAAA,EAAM,MAInB,C,+GC3CMC,GAAiBC,EAAAA,EAAAA,GAASC,EAAAA,GAuBhC,IArBqB,SAAH7J,GAAgC,IAA1BzC,EAAQyC,EAARzC,SAAauM,GAAKC,EAAAA,EAAAA,GAAA/J,EAAAgK,GACtCC,GAAsCC,EAAAA,EAAAA,KAAU,iBAAO,CACnDC,MAAO,EACPC,OAAQ,CAAEC,KAAM,EAAGC,QAAS,IAAKC,SAAU,IAE9C,IAAEC,GAAA/I,EAAAA,EAAAA,GAAAwI,EAAA,GAJIQ,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAMlC,OACI5M,EAAAA,EAAAA,KAAC+L,GAAcgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACXC,aAAc,kBAAMF,EAAe,CAAEP,MAAO,KAAM,EAClDU,aAAc,kBAAMH,EAAe,CAAEP,MAAO,GAAI,EAChDrF,MAAO,CACHgG,UAAWL,EAAYN,MAAMY,aAAY,SAAAZ,GAAK,eAAA5G,OAAa4G,EAAK,UAEhEL,GAAK,IAAAvM,SAERA,IAGb,C","sources":["components/Main/header/Header.jsx","components/Partials/footer/Newsletter.jsx","components/Partials/footer/Footer.jsx","components/about/contact/Contact.jsx","components/about/contact/App.jsx","theme/SpringButon.jsx"],"sourcesContent":["\nimport React from 'react';\nimport {\n  Box,\n  Flex,\n  HStack,\n  Link,\n  IconButton,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  useDisclosure,\n  useColorModeValue,\n  Stack,\n  Image\n\n} from '@chakra-ui/react';\nimport { ChevronDownIcon, HamburgerIcon, CloseIcon } from '@chakra-ui/icons';\nimport { Link as RouterLink } from 'react-router-dom';\nimport SpringButton from '../../../theme/SpringButon';\nimport LogoImage from '../../../assets/1.png';\n\nexport default function Header() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  // const history = useHistory();\n  return (\n    <Box bg=\"transparent\" px={8}>\n      <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\n        <IconButton\n          size={'md'}\n          mt=\"1.5rem\"\n          icon={isOpen ? <CloseIcon /> : <HamburgerIcon />}\n          aria-label={'Open Menu'}\n          display={{ md: 'none' }}\n          onClick={isOpen ? onClose : onOpen}\n        />\n        <HStack spacing={8} alignItems={'center'}>\n          <Link as={RouterLink} to=\"/\" _hover={{ boxShadow: \"5px\" }}>\n            <Image h='100px' pt=\"2em\"\n              objectFit='cover' src={LogoImage} alt=\"Logo\" /> {/* Use the Image component here */}\n          </Link>\n          <HStack\n            as={'nav'}\n            mt=\"1.5rem\"\n            spacing={4}\n            flexDirection={'row'}\n            display={{ base: isOpen ? 'flex' : 'none', md: 'flex', sm: 'none' }}>\n\n            <NavItem title=\"Mortgages\" routes={[\n              { name: 'Home Purchase', route: '/Mortgages/home-purchase' },\n              { name: 'Refinance', route: '/Mortgages/refinance' },\n              { name: 'Renewal', route: '/Mortgages/renewing' },\n              { name: 'Building/Construction', route: '/Mortgages/building' },\n\n            ]} />\n\n\n            <NavItem title=\"About\" routes={[\n              { name: 'About Us', route: '/about-page' },\n              { name: 'Contact Dora', route: '/contact-page' },\n              // Add all your routes\n            ]} />\n            <NavItem title=\"Resources\" routes={[\n              { name: 'FAQ', route: '/faq-page' },\n              { name: 'Glossary', route: '/glossary-page' },\n              { name: 'Documents You Need', route: '/doc-page' }\n              // Add all your routes\n            ]} />\n          </HStack>\n        </HStack>\n        <SpringButton as={RouterLink} to=\"/sign-in\" variant='outline' size={'sm'} mt=\"1.5rem\">Apply Now</SpringButton>\n      </Flex>\n      {isOpen ? (\n        <Box pb={4} display={{ md: 'none' }}>\n          <Stack as={'nav'} spacing={4}>\n            <NavItem title=\"Mortgages\" routes={[\n              { name: 'Home Purchase', route: '/Mortgages/home-purchase' },\n              { name: 'Refinance', route: '/Mortgages/refinance' },\n              { name: 'Renewal', route: '/Mortgages/renewing' },\n              { name: 'Building/Construction', route: '/Mortgages/building' },\n\n            ]} />\n\n\n            <NavItem title=\"About\" routes={[\n              { name: 'About Us', route: '/about-page' },\n              { name: 'Contact Us', route: '/contact-page' },\n              // Add all your routes\n            ]} />\n            <NavItem title=\"Resources\" routes={[\n              { name: 'FAQ', route: '/faq-page' },\n              { name: 'Glossary', route: '/glossary-page' },\n              { name: 'Documents You Need', route: '/doc-page' }\n\n            ]} />\n          </Stack>\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n\nconst NavItem = ({ title, routes }) => {\n  const bg = useColorModeValue('gray.200', 'gray.700');\n  return (\n    <Menu>\n      {({ isOpen }) => (\n        <>\n          <MenuButton\n            as={Link}\n            px={2}\n            py={1}\n            rounded={'md'}\n            transition={'all .3s ease'}\n            _expanded={{ bg }}\n            _hover={{ bg }}>\n            {title} <ChevronDownIcon ml={2} />\n          </MenuButton>\n          <MenuList>\n            {routes.map((item, idx) => (\n              <MenuItem as={RouterLink} to={item.route} key={idx}>\n                {item.name}\n              </MenuItem>\n            ))}\n          </MenuList>\n        </>\n      )}\n    </Menu>\n  )\n}","import React, { useState } from 'react';\nimport { Box, Input, Button, Text, VStack, useToast } from '@chakra-ui/react';\nimport axios from 'axios'\n\n\nconst Newsletter = () => {\n    const toast = useToast();\n\n\n    // I'm not using any of these functions as I've used a third party for email newsletters\n    const [formData, setFormData] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n      });\n\n      const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n          ...formData,\n          [name]: value,\n        });\n      };\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const form = e.target;\n        const isValidForm = form.checkValidity();\n  \n        if (isValidForm) {\n\n            try {\n                const response = await axios.post(`${process.env.REACT_APP_BACKEND}/api/auth/newsletter`, formData)\n                console.log(response)\n              } catch (err) {\n                console.error(err.message)\n              }\n           \n            toast({\n                title: \"Subscribed\",\n                description: \"You've been subscribed to our newsletter.\",\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n            });\n\n            // set form back to blank after submitting\n            setFormData({\n                firstName: '',\n                lastName: '',\n                email: '',\n              });\n        }\n    }\n\n    return (\n        <Box\n            flex=\"1\"\n            position=\"relative\"\n            maxHeight=\"90vh\"\n            margin=\"auto\"\n            minWidth=\"200px\"\n            overflowY=\"auto\"\n            // ml={[5, 2]}\n            mt={[-2]}\n            mr=\"3em\"\n           \n            p={5}\n            bg=\"gray.100\"\n            borderRadius=\"md\"\n            boxShadow=\"md\"\n            display=\"flex\"\n            // flexDirection={[\"column\", \"column\", \"row\"]}\n        >\n\n          \n            <Box as=\"form\" onSubmit={handleSubmit}>\n                <VStack spacing={2}>\n                    <Text fontWeight={'500'} fontSize={'lg'} mb={2}>Newsletter</Text>\n                    <iframe\n                        src=\"https://embeds.beehiiv.com/329b6cdf-adf5-4de2-84a1-4c556ec21cf0?slim=true\"\n                        data-test-id=\"beehiiv-embed\"\n                        height=\"52\"\n                        title=\"iframe\"\n                        frameBorder=\"0\"\n                        scrolling=\"no\"\n                        style={{\n                          margin: 0,\n                          borderRadius: '0px !important',\n                          backgroundColor: 'transparent'\n                        }}\n                      />\n                    {/* <Input type=\"text\" id=\"firstName\" bg=\"white\" name=\"firstName\" placeholder=\"First Name\"  value={formData.firstName} onChange={handleInputChange} required />\n                    <Input type=\"text\" id=\"lastName\" bg=\"white\" name=\"lastName\" placeholder=\"Last Name\" value={formData.lastName} onChange={handleInputChange} required />\n                    <Input type=\"email\" id=\"email\" bg=\"white\" name=\"email\" placeholder=\"Email\" value={formData.email} onChange={handleInputChange} required />\n                    <Button type=\"submit\">Sign Up</Button> */}\n                </VStack>\n            </Box>\n        </Box>\n    )\n}\n\nexport default Newsletter;","import {\n  Box,\n  Container,\n  Stack,\n  SimpleGrid,\n  Text,\n  Link,\n  VisuallyHidden,\n  chakra,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { FaTwitter, FaYoutube, FaInstagram, FaFacebook } from 'react-icons/fa';\nimport Newsletter from './Newsletter';\n// import AppStoreBadge from '@/components/AppStoreBadge';\n// import PlayStoreBadge from '@/components/PlayStoreBadge';\n\nconst ListHeader = ({ children }) => {\n  return (\n    <Text fontWeight={'500'} fontSize={'lg'} mb={2}>\n      {children}\n    </Text>\n  );\n};\n\nconst SocialButton = ({children, label, href}) => {\n  return (\n    <chakra.button\n      bg={useColorModeValue('blackAlpha.100', 'whiteAlpha.100')}\n      rounded={'full'}\n      w={8}\n      h={8}\n      cursor={'pointer'}\n      as={'a'}\n      href={href}\n      display={'inline-flex'}\n      alignItems={'center'}\n      justifyContent={'center'}\n      transition={'background 0.3s ease'}\n      _hover={{\n        bg: useColorModeValue('blackAlpha.200', 'whiteAlpha.200'),\n      }}>\n      <VisuallyHidden>{label}</VisuallyHidden>\n      {children}\n    </chakra.button>\n  );\n};\n\nexport default function LargeWithAppLinksAndSocial() {\n  return (\n    <Box pt={5}\n      bg={useColorModeValue('gray.50', 'gray.900')}\n      color={useColorModeValue('gray.700', 'gray.200')}>\n      <Container as={Stack} maxW={'6xl'} py={10}>\n        <SimpleGrid columns={{ base: 1, sm: 2, md: 4 }} spacing={8}>\n          <Stack align={'flex-start'}>\n            <ListHeader>Main Mortgage</ListHeader>\n            <Link href={'#'}>About Us</Link>\n            <Link href={'/contact-page'}>Contact Us</Link>\n            <Link href={'#'}>Why Choose a Mortgage Agent</Link>\n          </Stack>\n\n          <Stack align={'flex-start'}>\n            <ListHeader>Resources</ListHeader>\n            <Link href={'/faq-page'}>FAQ</Link>\n            <Link href={'/glossary-page'}>Glossary</Link>\n            <Link href={'/doc-page'}>Documents You Need</Link>\n            <Link href={'/apply-page'}>Apply Online</Link>\n          </Stack>\n\n          <Stack align={'flex-start'}>\n            <ListHeader>Legal</ListHeader>\n            <Link href={'#'}>Privacy Policy</Link>\n            <Link href={'#'}>Terms of Service</Link>\n\n          </Stack>\n\n          <Stack align={'flex-start'}>\n  <Newsletter />\n</Stack>\n        </SimpleGrid>\n      </Container>\n\n      <Box\n    borderTopWidth={1}\n    borderStyle={'solid'}\n    borderColor={useColorModeValue('gray.200', 'gray.700')}>\n    <Container\n      as={Stack}\n      maxW={'6xl'}\n      py={4}\n      direction={{ base: 'column', md: 'row' }}\n      spacing={4}\n      justify={{ md: 'space-between' }}\n      align={{ md: 'center' }}>\n      <Text fontSize=\"11\">© 2023 <b>VERICO The Mortgage Professionals</b> License 10280 All Rights Reserved.\n*some restrictions may apply\n</Text>\n<Text fontSize=\"11\">\nPowered by <a href=\"https://www.gomaxsolutions.com/\" style={{fontWeight: 'bold'}}>GoMAX Solutions</a>.\n</Text>\n<Text fontSize=\"11\">\nWebsite by <a href=\"https://www.linkedin.com/in/cassie-leclair-931093b6/\" style={{fontWeight: 'bold'}}>Cassie LeClair</a>\n\n</Text>\n<Link fontSize=\"11\" href={'/admin-signin'} style={{fontWeight: 'bold'}}>Admin</Link>\n      <Stack direction={'row'} spacing={6}>\n        <SocialButton label={'Twitter'} href={'#'}>\n          <FaFacebook />\n        </SocialButton>\n        {/* <SocialButton label={'YouTube'} href={'#'}>\n          <FaYoutube />\n        </SocialButton> */}\n        <SocialButton label={'Instagram'} href={'#'}>\n          <FaInstagram />\n        </SocialButton>\n      </Stack>\n    </Container>\n  </Box>\n    </Box>\n  );\n}","'use client'\nimport { FiMapPin, FiPhone } from 'react-icons/fi';\nimport { MdFax } from 'react-icons/md';\nimport {\n  Container,\n  Flex,\n  Box,\n  Heading,\n  Text,\n  IconButton,\n  Button,\n  VStack,\n  HStack,\n  Wrap,\n  WrapItem,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Textarea,\n  useToast\n} from '@chakra-ui/react'\nimport {\n  MdPhone,\n  MdEmail,\n  MdLocationOn,\n  MdFacebook,\n  MdOutlineEmail,\n} from 'react-icons/md'\nimport { BsGithub, BsDiscord, BsPerson } from 'react-icons/bs'\nimport SpringButton from '../../../theme/SpringButon';\nimport { useState } from 'react';\nimport axios from 'axios';\n\n\nexport default function Contact() {\n  const [name, setName] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [message, setMessage] = useState(\"\")\n  const toast = useToast();\n\n  const onSubmit = async(e) => {\n    e.preventDefault()\n   \n    if (name === \"\" | email === \"\" | message === \"\") {\n      toast({\n        title: \"Empty Fields!\",\n        description: \"Please fill out all fields.\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n      });\n\n      return;\n    }\n\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND}/api/send-mail`, {\n        name, email, message\n    })\n\n    setName(\"\")\n    setEmail(\"\")\n    setMessage(\"\")\n\n    toast({\n      title: \"Success!\",\n      description: \"Thank you for your message. We'll get back to you as soon as possible\",\n      status: \"success\",\n      toastPosition: \"top\",\n      duration: 5000,\n      isClosable: true,\n    });\n\n    } catch (err) {\n      console.log(err.message)\n    }\n  }\n\n  return (\n    <Flex>\n      <Box\n        bg=\"\n          #e0e5df\"\n        color=\"white\"\n        borderRadius=\"lg\"\n        m={{ sm: 2, md: 8, lg: 10 }}\n        p={{ sm: 5, md: 5, lg: 16 }}>\n        <Box p={4}>\n          <Wrap spacing={{ base: 20, sm: 3, md: 5, lg: 20 }}>\n            <WrapItem>\n              <Box>\n                <Heading color=\"#555742\" >Contact</Heading>\n                <Text mt={{ sm: 3, md: 3, lg: 5 }} color=\"#555742\">\n                  Fill up the form below to contact\n                </Text>\n                <Box py={{ base: 5, sm: 5, md: 8, lg: 10 }}>\n                  <VStack pl={0} spacing={3} alignItems=\"flex-start\">\n                    <Button\n                      size=\"md\"\n                      height=\"48px\"\n                      width=\"200px\"\n                      variant=\"ghost\"\n                      color=\"#555742\"\n                      _hover={{ border: '2px solid #50703e' }}\n                      leftIcon={<MdPhone color=\"#50703e\" size=\"20px\" />}>\n                      +91-988888888\n                    </Button>\n                    <Button\n                      size=\"md\"\n                      height=\"48px\"\n                      width=\"200px\"\n                      variant=\"ghost\"\n                      color=\"#555742\"\n                      _hover={{ border: '2px solid #50703e' }}\n                      leftIcon={<MdEmail color=\"#50703e\" size=\"20px\" />}>\n                      hello@abc.com\n                    </Button>\n                    <Button\n                      size=\"md\"\n                      height=\"48px\"\n                      width=\"200px\"\n                      variant=\"ghost\"\n                      color=\"#555742\"\n                      _hover={{ border: '2px solid #50703e' }}\n                      leftIcon={<MdLocationOn color=\"#50703e\" size=\"20px\" />}>\n                      Karnavati, India\n                    </Button>\n                  </VStack>\n                </Box>\n                <HStack\n                  mt={{ lg: 10, md: 10 }}\n                  spacing={5}\n                  px={5}\n                  alignItems=\"flex-start\">\n                  <IconButton\n                    color=\"white\"\n                    aria-label=\"facebook\"\n                    variant=\"ghost\"\n                    size=\"lg\"\n                    isRound={true}\n                    _hover={{ bg: '#50703e' }}\n                    icon={<MdFacebook size=\"28px\" />}\n                  />\n                  <IconButton\n                    color=\"white\"\n                    aria-label=\"github\"\n                    variant=\"ghost\"\n                    size=\"lg\"\n                    isRound={true}\n                    _hover={{ bg: '#50703e' }}\n                    icon={<BsGithub size=\"28px\" />}\n                  />\n                  <IconButton\n                    color=\"white\"\n                    aria-label=\"discord\"\n                    variant=\"ghost\"\n                    size=\"lg\"\n                    isRound={true}\n                    _hover={{ bg: '#50703e' }}\n                    icon={<BsDiscord size=\"28px\" />}\n                  />\n                </HStack>\n              </Box>\n            </WrapItem>\n            <WrapItem>\n              <Box bg=\"white\" borderRadius=\"lg\">\n                <Box m={8} color=\"#0B0E3F\">\n                  <VStack spacing={5}>\n\n                  <form onSubmit={onSubmit}>\n                    <FormControl id=\"name\">\n                      <FormLabel>Your Name</FormLabel>\n                      <InputGroup borderColor=\"#E0E1E7\">\n                        <InputLeftElement pointerEvents=\"none\">\n                          <BsPerson color=\"gray.800\" />\n                        </InputLeftElement>\n                        <Input type=\"text\" size=\"md\" value={name} onChange={e => setName(e.target.value)}/>\n                      </InputGroup>\n                    </FormControl>\n                    <FormControl id=\"email\">\n                      <FormLabel>Mail</FormLabel>\n                      <InputGroup borderColor=\"#E0E1E7\">\n                        <InputLeftElement pointerEvents=\"none\">\n                          <MdOutlineEmail color=\"gray.800\" />\n                        </InputLeftElement>\n                        <Input type=\"text\" size=\"md\" value={email} onChange={e => setEmail(e.target.value)} />\n                      </InputGroup>\n                    </FormControl>\n                    <FormControl id=\"message\">\n                      <FormLabel>Message</FormLabel>\n                      <Textarea\n                        borderColor=\"gray.300\"\n                        _hover={{\n                          borderRadius: 'gray.300',\n                        }}\n                        placeholder=\"message\"\n                        value={message} onChange={e => setMessage(e.target.value)}\n                      />\n                    </FormControl>\n                    <FormControl id=\"name\" float=\"right\">\n                      <SpringButton type=\"submit\" variant=\"solid\" bg=\"#50703e\" color=\"white\" _hover={{}}>\n                        Send Message\n                      </SpringButton>\n                    </FormControl>\n                  </form>\n\n                  </VStack>\n                </Box>\n              </Box>\n            </WrapItem>\n          </Wrap>\n        </Box>\n      </Box>\n    </Flex>\n\n  )\n}\n","import React from 'react';\nimport { Helmet } from \"react-helmet\";\nimport Header from '../../Main/header/Header';\n\nimport Contact from './Contact';\nimport Map from './Map';\nimport Footer from '../../Partials/footer/Footer';\n\nimport { Box, VStack } from \"@chakra-ui/react\";\nimport HeaderImage from '../../../assets/homeF.jpg';\n\nconst ContactPage = () => {\n    return (\n        <>\n            <Helmet>\n                <title>Contact Dora Main AMP | Main Mortgage | The Mortgage Professionals</title>\n                <meta name=\"description\" content=\"Reach out to Dora Main AMP at Main Mortgage, The Mortgage Professionals. We're here to answer your questions and guide you through the mortgage application process.\" />\n                <meta name=\"keywords\" content=\"Dora Main, Main Mortgage, Mortgage Professionals, contact, mortgage questions, AMP, mortgage application, mortgage help, mortgage guidance, customer service, home purchase, mortgage rates, refinancing, Canada\" />\n            </Helmet>\n            <Header />\n            <Box bgImage={`url(${HeaderImage})`} bgSize=\"cover\" bgPos=\"top\" m=\"2rem\" h=\"80vh\">\n                \n                {/* <BannerContent /> */}\n            </Box>\n            <Box\n                pb=\"5em\"\n                w={{ base: \"100%\", sm: \"100%\", md: \"80%\" }}\n                mx={{ base: \"0\", sm: \"0\", md: \"auto\" }}\n                bgColor=\"white\"\n                mt=\"-30em\"\n                p=\"2em\"\n                borderRadius=\"md\"\n                boxShadow=\"0 0 10px rgba(0,0,0,0.2)\"\n                mb=\"5em\"\n            >\n                <VStack pb=\"5\">\n                    <Contact />\n                    {/* <Map /> */}\n\n                </VStack>\n                \n                \n            </Box>\n            <Footer />\n            \n        </>\n    )\n}\n\nexport default ContactPage;","import React from 'react';\nimport { animated, useSpring } from 'react-spring';\nimport { Button as ChakraButton } from \"@chakra-ui/react\";\n\nconst AnimatedButton = animated(ChakraButton);\n\nconst SpringButton = ({ children, ...props }) => {\n    const [springProps, setSpringProps] = useSpring(() => ({\n        scale: 1,\n        config: { mass: 4, tension: 150, friction: 10 },\n        \n    }));\n\n    return (\n        <AnimatedButton\n            onMouseEnter={() => setSpringProps({ scale: 1.1 })}\n            onMouseLeave={() => setSpringProps({ scale: 1 })}\n            style={{\n                transform: springProps.scale.interpolate(scale => `scale(${scale})`),\n            }}\n            {...props}\n        >\n            {children}\n        </AnimatedButton>\n    );\n};\n\nexport default SpringButton;"],"names":["Header","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_jsxs","Box","bg","px","children","Flex","h","alignItems","justifyContent","_jsx","IconButton","size","mt","icon","CloseIcon","HamburgerIcon","display","md","onClick","HStack","spacing","Link","as","RouterLink","to","_hover","boxShadow","Image","pt","objectFit","src","LogoImage","alt","flexDirection","base","sm","NavItem","title","routes","name","route","SpringButton","variant","pb","Stack","_ref","useColorModeValue","Menu","_ref2","_Fragment","MenuButton","py","rounded","transition","_expanded","ChevronDownIcon","ml","MenuList","map","item","idx","MenuItem","toast","useToast","_useState","useState","firstName","lastName","email","_useState2","_slicedToArray","formData","setFormData","flex","position","maxHeight","margin","minWidth","overflowY","mr","p","borderRadius","onSubmit","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","form","response","wrap","_context","prev","next","preventDefault","target","checkValidity","axios","post","concat","process","sent","console","log","t0","error","message","description","status","duration","isClosable","stop","apply","arguments","VStack","Text","fontWeight","fontSize","mb","height","frameBorder","scrolling","style","backgroundColor","ListHeader","SocialButton","label","href","chakra","button","w","cursor","VisuallyHidden","LargeWithAppLinksAndSocial","color","Container","maxW","SimpleGrid","columns","align","Newsletter","borderTopWidth","borderStyle","borderColor","direction","justify","FaFacebook","FaInstagram","Contact","setName","_useState3","_useState4","setEmail","_useState5","_useState6","setMessage","m","lg","Wrap","WrapItem","Heading","pl","Button","width","border","leftIcon","MdPhone","MdEmail","MdLocationOn","isRound","MdFacebook","BsGithub","BsDiscord","abrupt","toastPosition","FormControl","id","FormLabel","InputGroup","InputLeftElement","pointerEvents","BsPerson","Input","type","value","onChange","MdOutlineEmail","Textarea","placeholder","float","Helmet","content","bgImage","HeaderImage","bgSize","bgPos","mx","bgColor","Footer","AnimatedButton","animated","ChakraButton","props","_objectWithoutProperties","_excluded","_useSpring","useSpring","scale","config","mass","tension","friction","_useSpring2","springProps","setSpringProps","_objectSpread","onMouseEnter","onMouseLeave","transform","interpolate"],"sourceRoot":""}