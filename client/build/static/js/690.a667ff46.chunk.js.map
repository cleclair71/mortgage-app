{"version":3,"file":"static/js/690.a667ff46.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/checkbox/src/checkbox-icon.tsx","../node_modules/@chakra-ui/checkbox/src/use-checkbox.ts","../node_modules/utilities/object-utils/src/omit.ts","../node_modules/@chakra-ui/checkbox/src/checkbox.tsx","../node_modules/@chakra-ui/checkbox/src/use-initial-animation-state.tsx","../node_modules/@chakra-ui/checkbox/src/checkbox-context.ts","../node_modules/@chakra-ui/form-control/src/form-control.tsx","../node_modules/@chakra-ui/form-control/src/use-form-control.ts","../node_modules/@zag-js/dom-query/src/platform.ts","../node_modules/@zag-js/dom-query/src/index.ts","../node_modules/@zag-js/focus-visible/src/index.ts"],"sourcesContent":["import { chakra, HTMLChakraProps, PropsOf } from \"@chakra-ui/system\"\n\nfunction CheckIcon(props: PropsOf<typeof chakra.svg>) {\n  return (\n    <chakra.svg\n      width=\"1.2em\"\n      viewBox=\"0 0 12 10\"\n      style={{\n        fill: \"none\",\n        strokeWidth: 2,\n        stroke: \"currentColor\",\n        strokeDasharray: 16,\n      }}\n      {...props}\n    >\n      <polyline points=\"1.5 6 4.5 9 10.5 1\" />\n    </chakra.svg>\n  )\n}\n\nfunction IndeterminateIcon(props: PropsOf<typeof chakra.svg>) {\n  return (\n    <chakra.svg\n      width=\"1.2em\"\n      viewBox=\"0 0 24 24\"\n      style={{ stroke: \"currentColor\", strokeWidth: 4 }}\n      {...props}\n    >\n      <line x1=\"21\" x2=\"3\" y1=\"12\" y2=\"12\" />\n    </chakra.svg>\n  )\n}\n\nexport interface CheckboxIconProps extends HTMLChakraProps<\"svg\"> {\n  /**\n   * @default false\n   */\n  isIndeterminate?: boolean\n  /**\n   * @default false\n   */\n  isChecked?: boolean\n}\n\n/**\n * CheckboxIcon is used to visually indicate the checked or indeterminate\n * state of a checkbox.\n *\n * @todo allow users pass their own icon svgs\n */\nexport function CheckboxIcon(props: CheckboxIconProps) {\n  const { isIndeterminate, isChecked, ...rest } = props\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon\n\n  return isChecked || isIndeterminate ? (\n    <chakra.div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\",\n      }}\n    >\n      <BaseIcon {...rest} />\n    </chakra.div>\n  ) : null\n}\n","import { useFormControlProps } from \"@chakra-ui/form-control\"\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\nimport type { PropGetter } from \"@chakra-ui/react-types\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { callAllHandlers, dataAttr } from \"@chakra-ui/shared-utils\"\nimport { omit } from \"@chakra-ui/object-utils\"\nimport { visuallyHiddenStyle } from \"@chakra-ui/visually-hidden\"\nimport { trackFocusVisible } from \"@zag-js/focus-visible\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\nimport { CheckboxState, UseCheckboxProps } from \"./checkbox-types\"\n\n/**\n * useCheckbox that provides all the state and focus management logic\n * for a checkbox. It is consumed by the `Checkbox` component\n *\n * @see Docs https://chakra-ui.com/checkbox#hooks\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/checkbox/\n */\nexport function useCheckbox(props: UseCheckboxProps = {}) {\n  const formControlProps = useFormControlProps(props)\n  const {\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isInvalid,\n    id,\n    onBlur,\n    onFocus,\n    \"aria-describedby\": ariaDescribedBy,\n  } = formControlProps\n\n  const {\n    defaultChecked,\n    isChecked: checkedProp,\n    isFocusable,\n    onChange,\n    isIndeterminate,\n    name,\n    value,\n    tabIndex = undefined,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-invalid\": ariaInvalid,\n    ...rest\n  } = props\n\n  const htmlProps = omit(rest, [\n    \"isDisabled\",\n    \"isReadOnly\",\n    \"isRequired\",\n    \"isInvalid\",\n    \"id\",\n    \"onBlur\",\n    \"onFocus\",\n    \"aria-describedby\",\n  ])\n\n  const onChangeProp = useCallbackRef(onChange)\n  const onBlurProp = useCallbackRef(onBlur)\n  const onFocusProp = useCallbackRef(onFocus)\n\n  const [isFocusVisible, setIsFocusVisible] = useState(false)\n  const [isFocused, setFocused] = useState(false)\n  const [isHovered, setHovered] = useState(false)\n  const [isActive, setActive] = useState(false)\n\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible)\n  }, [])\n\n  const inputRef = useRef<HTMLInputElement>(null)\n  const [rootIsLabelElement, setRootIsLabelElement] = useState(true)\n\n  const [checkedState, setCheckedState] = useState(!!defaultChecked)\n\n  const isControlled = checkedProp !== undefined\n  const isChecked = isControlled ? checkedProp : checkedState\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (isReadOnly || isDisabled) {\n        event.preventDefault()\n        return\n      }\n\n      if (!isControlled) {\n        if (isChecked) {\n          setCheckedState(event.target.checked)\n        } else {\n          setCheckedState(isIndeterminate ? true : event.target.checked)\n        }\n      }\n\n      onChangeProp?.(event)\n    },\n    [\n      isReadOnly,\n      isDisabled,\n      isChecked,\n      isControlled,\n      isIndeterminate,\n      onChangeProp,\n    ],\n  )\n\n  useSafeLayoutEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate)\n    }\n  }, [isIndeterminate])\n\n  useUpdateEffect(() => {\n    if (isDisabled) {\n      setFocused(false)\n    }\n  }, [isDisabled, setFocused])\n\n  /**\n   * HTMLFormElement.reset() should reset the checkbox state\n   */\n  useSafeLayoutEffect(() => {\n    const el = inputRef.current\n    if (!el?.form) return\n    const formResetListener = () => {\n      setCheckedState(!!defaultChecked)\n    }\n    el.form.addEventListener(\"reset\", formResetListener)\n    return () => el.form?.removeEventListener(\"reset\", formResetListener)\n  }, [])\n\n  const trulyDisabled = isDisabled && !isFocusable\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === \" \") {\n        setActive(true)\n      }\n    },\n    [setActive],\n  )\n\n  const onKeyUp = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === \" \") {\n        setActive(false)\n      }\n    },\n    [setActive],\n  )\n\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   *\n   * These libraries set the checked value for input fields\n   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.\n   *\n   * This means the `isChecked` state will get out of sync with `ref.current.checked`,\n   * even though the input validation with work, the UI will not be up to date.\n   *\n   * Let's correct that by checking and syncing the state accordingly.\n   */\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current) return\n    const notInSync = inputRef.current.checked !== isChecked\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked)\n    }\n  }, [inputRef.current])\n\n  const getCheckboxProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => {\n      const onPressDown = (event: React.MouseEvent) => {\n        // On mousedown, the input blurs and returns focus to the `body`,\n        // we need to prevent this. Native checkboxes keeps focus on `input`\n        if (isFocused) {\n          event.preventDefault()\n        }\n        setActive(true)\n      }\n\n      return {\n        ...props,\n        ref: forwardedRef,\n        \"data-active\": dataAttr(isActive),\n        \"data-hover\": dataAttr(isHovered),\n        \"data-checked\": dataAttr(isChecked),\n        \"data-focus\": dataAttr(isFocused),\n        \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n        \"data-indeterminate\": dataAttr(isIndeterminate),\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(isInvalid),\n        \"data-readonly\": dataAttr(isReadOnly),\n        \"aria-hidden\": true,\n        onMouseDown: callAllHandlers(props.onMouseDown, onPressDown),\n        onMouseUp: callAllHandlers(props.onMouseUp, () => setActive(false)),\n        onMouseEnter: callAllHandlers(props.onMouseEnter, () =>\n          setHovered(true),\n        ),\n        onMouseLeave: callAllHandlers(props.onMouseLeave, () =>\n          setHovered(false),\n        ),\n      }\n    },\n    [\n      isActive,\n      isChecked,\n      isDisabled,\n      isFocused,\n      isFocusVisible,\n      isHovered,\n      isIndeterminate,\n      isInvalid,\n      isReadOnly,\n    ],\n  )\n\n  const getIndicatorProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n    }),\n    [\n      isActive,\n      isChecked,\n      isDisabled,\n      isFocused,\n      isFocusVisible,\n      isHovered,\n      isIndeterminate,\n      isInvalid,\n      isReadOnly,\n    ],\n  )\n\n  const getRootProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => ({\n      ...htmlProps,\n      ...props,\n      ref: mergeRefs(forwardedRef, (node: HTMLElement) => {\n        if (!node) return\n        setRootIsLabelElement(node.tagName === \"LABEL\")\n      }),\n      onClick: callAllHandlers(props.onClick, () => {\n        /**\n         * Accessibility:\n         *\n         * Ideally, `getRootProps` should be spread unto a `label` element.\n         *\n         * If the element was changed using the `as` prop or changing\n         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger\n         * click on the input when the element is clicked.\n         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480\n         */\n        if (!rootIsLabelElement) {\n          inputRef.current?.click()\n          requestAnimationFrame(() => {\n            inputRef.current?.focus({ preventScroll: true })\n          })\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid),\n    }),\n    [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement],\n  )\n\n  const getInputProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => {\n      return {\n        ...props,\n        ref: mergeRefs(inputRef, forwardedRef),\n        type: \"checkbox\",\n        name,\n        value,\n        id,\n        tabIndex,\n        onChange: callAllHandlers(props.onChange, handleChange),\n        onBlur: callAllHandlers(props.onBlur, onBlurProp, () =>\n          setFocused(false),\n        ),\n        onFocus: callAllHandlers(props.onFocus, onFocusProp, () =>\n          setFocused(true),\n        ),\n        onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n        onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n        required: isRequired,\n        checked: isChecked,\n        disabled: trulyDisabled,\n        readOnly: isReadOnly,\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n        \"aria-describedby\": ariaDescribedBy,\n        \"aria-disabled\": isDisabled,\n        style: visuallyHiddenStyle,\n      }\n    },\n    [\n      name,\n      value,\n      id,\n      handleChange,\n      onBlurProp,\n      onFocusProp,\n      onKeyDown,\n      onKeyUp,\n      isRequired,\n      isChecked,\n      trulyDisabled,\n      isReadOnly,\n      ariaLabel,\n      ariaLabelledBy,\n      ariaInvalid,\n      isInvalid,\n      ariaDescribedBy,\n      isDisabled,\n      tabIndex,\n    ],\n  )\n\n  const getLabelProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props.onMouseDown, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid),\n    }),\n    [isChecked, isDisabled, isInvalid],\n  )\n\n  const state: CheckboxState = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isIndeterminate,\n    isDisabled,\n    isReadOnly,\n    isRequired,\n  }\n\n  return {\n    state,\n    getRootProps,\n    getCheckboxProps,\n    getIndicatorProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps,\n  }\n}\n\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\nfunction stopEvent(event: React.SyntheticEvent) {\n  event.preventDefault()\n  event.stopPropagation()\n}\n\nexport type UseCheckboxReturn = ReturnType<typeof useCheckbox>\n","export function omit<T extends Record<string, any>, K extends keyof T>(\n  object: T,\n  keysToOmit: K[] = [],\n) {\n  const clone: Record<string, unknown> = Object.assign({}, object)\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key as string]\n    }\n  }\n  return clone as Omit<T, K>\n}\n","import { callAll, cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  PropsOf,\n  SystemStyleObject,\n  ThemingProps,\n  chakra,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cloneElement, useMemo } from \"react\"\nimport { useCheckboxGroupContext } from \"./checkbox-context\"\nimport { CheckboxIcon } from \"./checkbox-icon\"\nimport { CheckboxOptions, UseCheckboxProps } from \"./checkbox-types\"\nimport { useCheckbox } from \"./use-checkbox\"\nimport { useInitialAnimationState } from \"./use-initial-animation-state\"\n\nconst controlStyles: SystemStyleObject = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0,\n}\n\nconst rootStyles: SystemStyleObject = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\",\n}\n\nconst checkAnim = keyframes({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\",\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\",\n  },\n})\n\nconst indeterminateOpacityAnim = keyframes({\n  from: {\n    opacity: 0,\n  },\n  to: {\n    opacity: 1,\n  },\n})\nconst indeterminateScaleAnim = keyframes({\n  from: {\n    transform: \"scaleX(0.65)\",\n  },\n  to: {\n    transform: \"scaleX(1)\",\n  },\n})\n\ntype CheckboxControlProps = Omit<HTMLChakraProps<\"div\">, keyof UseCheckboxProps>\n\ntype BaseInputProps = Pick<\n  PropsOf<\"input\">,\n  \"onBlur\" | \"checked\" | \"defaultChecked\"\n>\n\nexport interface CheckboxProps\n  extends CheckboxControlProps,\n    BaseInputProps,\n    ThemingProps<\"Checkbox\">,\n    UseCheckboxProps,\n    CheckboxOptions {}\n\n/**\n * Checkbox\n *\n * React component used in forms when a user needs to select\n * multiple values from several options.\n *\n * @see Docs https://chakra-ui.com/checkbox\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/checkbox/\n */\nexport const Checkbox = forwardRef<CheckboxProps, \"input\">(function Checkbox(\n  props,\n  ref,\n) {\n  const group = useCheckboxGroupContext()\n\n  const mergedProps = { ...group, ...props } as CheckboxProps\n  const styles = useMultiStyleConfig(\"Checkbox\", mergedProps)\n\n  const ownProps = omitThemingProps(props)\n\n  const {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon = <CheckboxIcon />,\n    isChecked: isCheckedProp,\n    isDisabled = group?.isDisabled,\n    onChange: onChangeProp,\n    inputProps,\n    ...rest\n  } = ownProps\n\n  let isChecked = isCheckedProp\n  if (group?.value && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value)\n  }\n\n  let onChange = onChangeProp\n  if (group?.onChange && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp)\n  }\n\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    getRootProps,\n  } = useCheckbox({\n    ...rest,\n    isDisabled,\n    isChecked,\n    onChange,\n  })\n\n  const shouldAnimate = useInitialAnimationState(state.isChecked)\n\n  const iconStyles: SystemStyleObject = useMemo(\n    () => ({\n      animation: !shouldAnimate\n        ? undefined\n        : state.isIndeterminate\n        ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear`\n        : `${checkAnim} 200ms linear`,\n      fontSize: iconSize,\n      color: iconColor,\n      ...styles.icon,\n    }),\n    [iconColor, iconSize, shouldAnimate, state.isIndeterminate, styles.icon],\n  )\n\n  const clonedIcon = cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked,\n  })\n\n  return (\n    <chakra.label\n      __css={{ ...rootStyles, ...styles.container }}\n      className={cx(\"chakra-checkbox\", className)}\n      {...getRootProps()}\n    >\n      <input\n        className=\"chakra-checkbox__input\"\n        {...getInputProps(inputProps, ref)}\n      />\n      <chakra.span\n        __css={{ ...controlStyles, ...styles.control }}\n        className=\"chakra-checkbox__control\"\n        {...getCheckboxProps()}\n      >\n        {clonedIcon}\n      </chakra.span>\n      {children && (\n        <chakra.span\n          className=\"chakra-checkbox__label\"\n          {...getLabelProps()}\n          __css={{\n            marginStart: spacing,\n            ...styles.label,\n          }}\n        >\n          {children}\n        </chakra.span>\n      )}\n    </chakra.label>\n  )\n})\n\nCheckbox.displayName = \"Checkbox\"\n","import { useState } from \"react\"\n\nexport function useInitialAnimationState(isChecked: boolean) {\n  const [previousIsChecked, setPreviousIsChecked] = useState(isChecked)\n  const [shouldAnimate, setShouldAnimate] = useState(false)\n\n  if (isChecked !== previousIsChecked) {\n    setShouldAnimate(true)\n    setPreviousIsChecked(isChecked)\n  }\n\n  return shouldAnimate\n}\n","import { createContext } from \"@chakra-ui/react-context\"\nimport { CheckboxGroupContext } from \"./checkbox-types\"\n\nexport const [CheckboxGroupProvider, useCheckboxGroupContext] =\n  createContext<CheckboxGroupContext>({\n    name: \"CheckboxGroupContext\",\n    strict: false,\n  })\n","import { createContext } from \"@chakra-ui/react-context\"\nimport { PropGetter } from \"@chakra-ui/react-types\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\"\nimport { useCallback, useId, useState } from \"react\"\n\nconst [FormControlStylesProvider, useFormControlStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `,\n})\n\nexport { useFormControlContext, useFormControlStyles }\n\nexport interface FormControlOptions {\n  /**\n   * If `true`, the form control will be required. This has 2 side effects:\n   * - The `FormLabel` will show a required indicator\n   * - The form element (e.g, Input) will have `aria-required` set to `true`\n   *\n   * @default false\n   */\n  isRequired?: boolean\n  /**\n   * If `true`, the form control will be disabled. This has 2 side effects:\n   * - The `FormLabel` will have `data-disabled` attribute\n   * - The form element (e.g, Input) will be disabled\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the form control will be invalid. This has 2 side effects:\n   * - The `FormLabel` and `FormErrorIcon` will have `data-invalid` set to `true`\n   * - The form element (e.g, Input) will have `aria-invalid` set to `true`\n   *\n   * @default false\n   */\n  isInvalid?: boolean\n  /**\n   * If `true`, the form control will be readonly\n   *\n   * @default false\n   */\n  isReadOnly?: boolean\n}\n\ninterface FormControlContext extends FormControlOptions {\n  /**\n   * The label text used to inform users as to what information is\n   * requested for a text field.\n   */\n  label?: string\n  /**\n   * The custom `id` to use for the form control. This is passed directly to the form element (e.g, Input).\n   * - The form element (e.g. Input) gets the `id`\n   * - The form label id: `form-label-${id}`\n   * - The form error text id: `form-error-text-${id}`\n   * - The form helper text id: `form-helper-text-${id}`\n   */\n  id?: string\n}\n\ntype FormControlProviderContext = Omit<\n  ReturnType<typeof useFormControlProvider>,\n  \"getRootProps\" | \"htmlProps\"\n>\n\nconst [FormControlProvider, useFormControlContext] =\n  createContext<FormControlProviderContext>({\n    strict: false,\n    name: \"FormControlContext\",\n  })\n\nfunction useFormControlProvider(props: FormControlContext) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props\n\n  // Generate all the required ids\n  const uuid = useId()\n  const id = idProp || `field-${uuid}`\n\n  const labelId = `${id}-label`\n  const feedbackId = `${id}-feedback`\n  const helpTextId = `${id}-helptext`\n\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the `aria-describedby` of the `input`.\n   */\n  const [hasFeedbackText, setHasFeedbackText] = useState(false)\n\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the `aria-describedby` of the `input`.\n   */\n  const [hasHelpText, setHasHelpText] = useState(false)\n\n  // Track whether the form element (e.g, `input`) has focus.\n  const [isFocused, setFocus] = useState(false)\n\n  const getHelpTextProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props,\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node) return\n        setHasHelpText(true)\n      }),\n    }),\n    [helpTextId],\n  )\n\n  const getLabelProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props.id !== undefined ? props.id : labelId,\n      htmlFor: props.htmlFor !== undefined ? props.htmlFor : id,\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId],\n  )\n\n  const getErrorMessageProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props,\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node) return\n        setHasFeedbackText(true)\n      }),\n      \"aria-live\": \"polite\",\n    }),\n    [feedbackId],\n  )\n\n  const getRootProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\",\n    }),\n    [htmlProps],\n  )\n\n  const getRequiredIndicatorProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props.children || \"*\",\n    }),\n    [],\n  )\n\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps,\n  }\n}\n\nexport interface FormControlProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"FormControl\">,\n    FormControlContext {}\n\n/**\n * FormControl provides context such as\n * `isInvalid`, `isDisabled`, and `isRequired` to form elements.\n *\n * This is commonly used in form elements such as `input`,\n * `select`, `textarea`, etc.\n *\n * @see Docs https://chakra-ui.com/docs/components/form-control\n */\nexport const FormControl = forwardRef<FormControlProps, \"div\">(\n  function FormControl(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props)\n    const ownProps = omitThemingProps(props)\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps)\n\n    const className = cx(\"chakra-form-control\", props.className)\n\n    return (\n      <FormControlProvider value={context}>\n        <FormControlStylesProvider value={styles}>\n          <chakra.div\n            {...getRootProps({}, ref)}\n            className={className}\n            __css={styles[\"container\"]}\n          />\n        </FormControlStylesProvider>\n      </FormControlProvider>\n    )\n  },\n)\n\nFormControl.displayName = \"FormControl\"\n\nexport interface FormHelperTextProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * FormHelperText\n *\n * Assistive component that conveys additional guidance\n * about the field, such as how it will be used and what\n * types in values should be provided.\n */\nexport const FormHelperText = forwardRef<FormHelperTextProps, \"div\">(\n  function FormHelperText(props, ref) {\n    const field = useFormControlContext()\n    const styles = useFormControlStyles()\n    const className = cx(\"chakra-form__helper-text\", props.className)\n    return (\n      <chakra.div\n        {...field?.getHelpTextProps(props, ref)}\n        __css={styles.helperText}\n        className={className}\n      />\n    )\n  },\n)\n\nFormHelperText.displayName = \"FormHelperText\"\n","import { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport { FormControlOptions, useFormControlContext } from \"./form-control\"\n\nexport interface UseFormControlProps<T extends HTMLElement>\n  extends FormControlOptions {\n  id?: string\n  onFocus?: React.FocusEventHandler<T>\n  onBlur?: React.FocusEventHandler<T>\n  disabled?: boolean\n  readOnly?: boolean\n  required?: boolean\n  \"aria-describedby\"?: string\n}\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n *\n * @internal\n */\nexport function useFormControl<T extends HTMLElement>(\n  props: UseFormControlProps<T>,\n) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } =\n    useFormControlProps(props)\n\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly),\n  }\n}\n\n/**\n * @internal\n */\nexport function useFormControlProps<T extends HTMLElement>(\n  props: UseFormControlProps<T>,\n) {\n  const field = useFormControlContext()\n\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props\n\n  const labelIds: string[] = props[\"aria-describedby\"]\n    ? [props[\"aria-describedby\"]]\n    : []\n\n  // Error message must be described first in all scenarios.\n  if (field?.hasFeedbackText && field?.isInvalid) {\n    labelIds.push(field.feedbackId)\n  }\n\n  if (field?.hasHelpText) {\n    labelIds.push(field.helpTextId)\n  }\n\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || undefined,\n    id: id ?? field?.id,\n    isDisabled: disabled ?? isDisabled ?? field?.isDisabled,\n    isReadOnly: readOnly ?? isReadOnly ?? field?.isReadOnly,\n    isRequired: required ?? isRequired ?? field?.isRequired,\n    isInvalid: isInvalid ?? field?.isInvalid,\n    onFocus: callAllHandlers(field?.onFocus, onFocus),\n    onBlur: callAllHandlers(field?.onBlur, onBlur),\n  }\n}\n","export const isDom = () => typeof document !== \"undefined\"\n\nexport function getPlatform() {\n  const agent = (navigator as any).userAgentData\n  return agent?.platform ?? navigator.platform\n}\n\nconst pt = (v: RegExp) => isDom() && v.test(getPlatform())\nconst ua = (v: RegExp) => isDom() && v.test(navigator.userAgent)\nconst vn = (v: RegExp) => isDom() && v.test(navigator.vendor)\n\nexport const isTouchDevice = () => isDom() && !!navigator.maxTouchPoints\nexport const isMac = () => pt(/^Mac/) && !isTouchDevice()\nexport const isIPhone = () => pt(/^iPhone/)\nexport const isSafari = () => isApple() && vn(/apple/i)\nexport const isFirefox = () => ua(/firefox\\//i)\nexport const isApple = () => pt(/mac|iphone|ipad|ipod/i)\nexport const isIos = () => isApple() && !isMac()\n","export * from \"./attrs\"\nexport * from \"./contains\"\nexport * from \"./create-scope\"\nexport * from \"./env\"\nexport * from \"./get-active-element\"\nexport * from \"./get-by-id\"\nexport * from \"./get-by-text\"\nexport * from \"./get-by-typeahead\"\nexport * from \"./get-computed-style\"\nexport * from \"./get-event-target\"\nexport * from \"./get-scroll-parent\"\nexport * from \"./is-editable-element\"\nexport * from \"./is-html-element\"\nexport * from \"./platform\"\nexport * from \"./query\"\nexport * from \"./raf\"\n\nexport const MAX_Z_INDEX = 2147483647\n","import { isDom } from \"@zag-js/dom-query\"\n\ntype Modality = \"keyboard\" | \"pointer\" | \"virtual\"\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent\ntype Handler = (modality: Modality, e: HandlerEvent | null) => void\ntype FocusVisibleCallback = (isFocusVisible: boolean) => void\n\nlet hasSetup = false\nlet modality: Modality | null = null\nlet hasEventBeforeFocus = false\nlet hasBlurredWindowRecently = false\n\nconst handlers = new Set<Handler>()\n\nfunction trigger(modality: Modality, event: HandlerEvent | null) {\n  handlers.forEach((handler) => handler(modality, event))\n}\n\nconst isMac = typeof window !== \"undefined\" && window.navigator != null ? /^Mac/.test(window.navigator.platform) : false\n\nfunction isValidKey(e: KeyboardEvent) {\n  return !(\n    e.metaKey ||\n    (!isMac && e.altKey) ||\n    e.ctrlKey ||\n    e.key === \"Control\" ||\n    e.key === \"Shift\" ||\n    e.key === \"Meta\"\n  )\n}\n\nfunction onKeyboardEvent(event: KeyboardEvent) {\n  hasEventBeforeFocus = true\n  if (isValidKey(event)) {\n    modality = \"keyboard\"\n    trigger(\"keyboard\", event)\n  }\n}\n\nfunction onPointerEvent(event: PointerEvent | MouseEvent) {\n  modality = \"pointer\"\n\n  if (event.type === \"mousedown\" || event.type === \"pointerdown\") {\n    hasEventBeforeFocus = true\n    const target = event.composedPath ? event.composedPath()[0] : event.target\n\n    let matches = false\n    try {\n      matches = (target as any).matches(\":focus-visible\")\n    } catch {}\n\n    if (matches) return\n    trigger(\"pointer\", event)\n  }\n}\n\nfunction isVirtualClick(event: MouseEvent | PointerEvent): boolean {\n  // JAWS/NVDA with Firefox.\n  if ((event as any).mozInputSource === 0 && event.isTrusted) return true\n  return event.detail === 0 && !(event as PointerEvent).pointerType\n}\n\nfunction onClickEvent(e: MouseEvent) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true\n    modality = \"virtual\"\n  }\n}\n\nfunction onWindowFocus(event: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (event.target === window || event.target === document) {\n    return\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to keyboard modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    modality = \"virtual\"\n    trigger(\"virtual\", event)\n  }\n\n  hasEventBeforeFocus = false\n  hasBlurredWindowRecently = false\n}\n\nfunction onWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false\n  hasBlurredWindowRecently = true\n}\n\nfunction isFocusVisible() {\n  return modality !== \"pointer\"\n}\n\nfunction setupGlobalFocusEvents() {\n  if (!isDom() || hasSetup) {\n    return\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  const { focus } = HTMLElement.prototype\n  HTMLElement.prototype.focus = function focusElement(...args) {\n    hasEventBeforeFocus = true\n    focus.apply(this, args)\n  }\n\n  document.addEventListener(\"keydown\", onKeyboardEvent, true)\n  document.addEventListener(\"keyup\", onKeyboardEvent, true)\n  document.addEventListener(\"click\", onClickEvent, true)\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener(\"focus\", onWindowFocus, true)\n  window.addEventListener(\"blur\", onWindowBlur, false)\n\n  if (typeof PointerEvent !== \"undefined\") {\n    document.addEventListener(\"pointerdown\", onPointerEvent, true)\n    document.addEventListener(\"pointermove\", onPointerEvent, true)\n    document.addEventListener(\"pointerup\", onPointerEvent, true)\n  } else {\n    document.addEventListener(\"mousedown\", onPointerEvent, true)\n    document.addEventListener(\"mousemove\", onPointerEvent, true)\n    document.addEventListener(\"mouseup\", onPointerEvent, true)\n  }\n\n  hasSetup = true\n}\n\nexport function trackFocusVisible(fn: FocusVisibleCallback) {\n  setupGlobalFocusEvents()\n\n  fn(isFocusVisible())\n  const handler = () => fn(isFocusVisible())\n\n  handlers.add(handler)\n  return () => {\n    handlers.delete(handler)\n  }\n}\n\nexport function trackInteractionModality(fn: (value: Modality | null) => void) {\n  setupGlobalFocusEvents()\n\n  fn(modality)\n  const handler = () => fn(modality)\n\n  handlers.add(handler)\n  return () => {\n    handlers.delete(handler)\n  }\n}\n\nexport function setInteractionModality(value: Modality) {\n  modality = value\n  trigger(value, null)\n}\n\nexport function getInteractionModality() {\n  return modality\n}\n"],"names":["CheckIcon","props","jsx","chakra","svg","_objectSpread","width","viewBox","style","fill","strokeWidth","stroke","strokeDasharray","children","points","IndeterminateIcon","x1","x2","y1","y2","CheckboxIcon","isIndeterminate","isChecked","rest","_objectWithoutProperties","_excluded","BaseIcon","div","display","alignItems","justifyContent","height","useCheckbox","arguments","length","undefined","formControlProps","useFormControlProps","isDisabled","isReadOnly","isRequired","isInvalid","id","onBlur","onFocus","ariaDescribedBy","defaultChecked","checkedProp","isFocusable","onChange","name","value","_props$tabIndex","tabIndex","ariaLabel","ariaLabelledBy","ariaInvalid","htmlProps","object","_step","keysToOmit","clone","Object","assign","_iterator","_createForOfIteratorHelper","s","n","done","key","err","e","f","omit","onChangeProp","useCallbackRef","onBlurProp","onFocusProp","_useState","useState","_useState2","_slicedToArray","isFocusVisible","setIsFocusVisible","_useState3","_useState4","isFocused","setFocused","_useState5","_useState6","isHovered","setHovered","_useState7","_useState8","isActive","setActive","useEffect","trackFocusVisible","inputRef","useRef","_useState9","_useState10","rootIsLabelElement","setRootIsLabelElement","_useState11","_useState12","checkedState","setCheckedState","isControlled","handleChange","useCallback","event","preventDefault","target","checked","useSafeLayoutEffect","current","indeterminate","Boolean","useUpdateEffect","el","form","formResetListener","addEventListener","_a","removeEventListener","trulyDisabled","onKeyDown","onKeyUp","getCheckboxProps","props2","forwardedRef","ref","dataAttr","onMouseDown","callAllHandlers","onMouseUp","onMouseEnter","onMouseLeave","getIndicatorProps","getRootProps","mergeRefs","node","tagName","onClick","click","requestAnimationFrame","_a2","focus","preventScroll","getInputProps","type","required","disabled","readOnly","visuallyHiddenStyle","getLabelProps","stopEvent","state","stopPropagation","controlStyles","verticalAlign","userSelect","flexShrink","rootStyles","cursor","position","checkAnim","keyframes","from","opacity","strokeDashoffset","transform","to","indeterminateOpacityAnim","indeterminateScaleAnim","Checkbox","forwardRef","group","useCheckboxGroupContext","mergedProps","styles","useMultiStyleConfig","ownProps","omitThemingProps","_ownProps$spacing","spacing","className","iconColor","iconSize","_ownProps$icon","icon","isCheckedProp","_ownProps$isDisabled","inputProps","includes","callAll","_useCheckbox","shouldAnimate","previousIsChecked","setPreviousIsChecked","setShouldAnimate","useInitialAnimationState","iconStyles","useMemo","animation","concat","fontSize","color","clonedIcon","cloneElement","__css","jsxs","label","container","cx","span","control","marginStart","displayName","_createContext","createContext","strict","_createContext2","CheckboxGroupProvider","errorMessage","FormControlStylesProvider","useFormControlStyles","_createContext3","_createContext4","FormControlProvider","useFormControlContext","FormControl","_useFormControlProvid","idProp","uuid","useId","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","setFocus","getHelpTextProps","htmlFor","getErrorMessageProps","role","getRequiredIndicatorProps","useFormControlProvider","context","_excluded2","field","helperText","useFormControl","_useFormControlProps","ariaAttr","_b","_c","labelIds","push","join","isDom","document","hasSetup","modality","hasEventBeforeFocus","hasBlurredWindowRecently","handlers","Set","trigger","modality2","forEach","handler","isMac","window","navigator","test","platform","onKeyboardEvent","metaKey","altKey","ctrlKey","onPointerEvent","composedPath","matches","_unused","onClickEvent","mozInputSource","isTrusted","detail","pointerType","onWindowFocus","onWindowBlur","setupGlobalFocusEvents","HTMLElement","prototype","_len","args","Array","_key","apply","this","PointerEvent","fn","add","delete"],"sourceRoot":""}