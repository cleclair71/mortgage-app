{"version":3,"file":"static/js/580.d8313713.chunk.js","mappings":"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","sources":["components/Main/header/Header.jsx","components/Partials/footer/Newsletter.jsx","components/Partials/footer/Footer.jsx","../node_modules/@chakra-ui/form-control/src/form-error.tsx","components/auth/signup/SignUp.jsx","components/auth/signup/App.jsx","theme/SpringButon.jsx","../node_modules/@chakra-ui/form-control/src/form-label.tsx","../node_modules/@chakra-ui/form-control/src/form-control.tsx","../node_modules/@chakra-ui/form-control/src/use-form-control.ts","../node_modules/@chakra-ui/input/src/input.tsx"],"sourcesContent":["\nimport React from 'react';\nimport {\n  Box,\n  Flex,\n  HStack,\n  Link,\n  IconButton,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  useDisclosure,\n  useColorModeValue,\n  Stack,\n  Image\n\n} from '@chakra-ui/react';\nimport { ChevronDownIcon, HamburgerIcon, CloseIcon } from '@chakra-ui/icons';\nimport { Link as RouterLink } from 'react-router-dom';\nimport SpringButton from '../../../theme/SpringButon';\nimport LogoImage from '../../../assets/1.png';\n\nexport default function Header() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  // const history = useHistory();\n  return (\n    <Box bg=\"transparent\" px={8}>\n      <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\n        <IconButton\n          size={'md'}\n          mt=\"1.5rem\"\n          icon={isOpen ? <CloseIcon /> : <HamburgerIcon />}\n          aria-label={'Open Menu'}\n          display={{ md: 'none' }}\n          onClick={isOpen ? onClose : onOpen}\n        />\n        <HStack spacing={8} alignItems={'center'}>\n          <Link as={RouterLink} to=\"/\" _hover={{ boxShadow: \"5px\" }}>\n            <Image h='100px' pt=\"2em\"\n              objectFit='cover' src={LogoImage} alt=\"Logo\" /> {/* Use the Image component here */}\n          </Link>\n          <HStack\n            as={'nav'}\n            mt=\"1.5rem\"\n            spacing={4}\n            flexDirection={'row'}\n            display={{ base: isOpen ? 'flex' : 'none', md: 'flex', sm: 'none' }}>\n\n            <NavItem title=\"Mortgages\" routes={[\n              { name: 'Home Purchase', route: '/Mortgages/home-purchase' },\n              { name: 'Refinance', route: '/Mortgages/refinance' },\n              { name: 'Renewal', route: '/Mortgages/renewing' },\n              { name: 'Building/Construction', route: '/Mortgages/building' },\n\n            ]} />\n\n\n            <NavItem title=\"About\" routes={[\n              { name: 'About Us', route: '/about-page' },\n              { name: 'Contact Dora', route: '/contact-page' },\n              // Add all your routes\n            ]} />\n            <NavItem title=\"Resources\" routes={[\n              { name: 'FAQ', route: '/faq-page' },\n              { name: 'Glossary', route: '/glossary-page' },\n              { name: 'Documents You Need', route: '/doc-page' }\n              // Add all your routes\n            ]} />\n          </HStack>\n        </HStack>\n        <SpringButton as={RouterLink} to=\"/sign-in\" variant='outline' size={'sm'} mt=\"1.5rem\">Apply Now</SpringButton>\n      </Flex>\n      {isOpen ? (\n        <Box pb={4} display={{ md: 'none' }}>\n          <Stack as={'nav'} spacing={4}>\n            <NavItem title=\"Mortgages\" routes={[\n              { name: 'Home Purchase', route: '/Mortgages/home-purchase' },\n              { name: 'Refinance', route: '/Mortgages/refinance' },\n              { name: 'Renewal', route: '/Mortgages/renewing' },\n              { name: 'Building/Construction', route: '/Mortgages/building' },\n\n            ]} />\n\n\n            <NavItem title=\"About\" routes={[\n              { name: 'About Us', route: '/about-page' },\n              { name: 'Contact Us', route: '/contact-page' },\n              // Add all your routes\n            ]} />\n            <NavItem title=\"Resources\" routes={[\n              { name: 'FAQ', route: '/faq-page' },\n              { name: 'Glossary', route: '/glossary-page' },\n              { name: 'Documents You Need', route: '/doc-page' }\n\n            ]} />\n          </Stack>\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n\nconst NavItem = ({ title, routes }) => {\n  const bg = useColorModeValue('gray.200', 'gray.700');\n  return (\n    <Menu>\n      {({ isOpen }) => (\n        <>\n          <MenuButton\n            as={Link}\n            px={2}\n            py={1}\n            rounded={'md'}\n            transition={'all .3s ease'}\n            _expanded={{ bg }}\n            _hover={{ bg }}>\n            {title} <ChevronDownIcon ml={2} />\n          </MenuButton>\n          <MenuList>\n            {routes.map((item, idx) => (\n              <MenuItem as={RouterLink} to={item.route} key={idx}>\n                {item.name}\n              </MenuItem>\n            ))}\n          </MenuList>\n        </>\n      )}\n    </Menu>\n  )\n}","import React, { useState } from 'react';\nimport { Box, Input, Button, Text, VStack, useToast } from '@chakra-ui/react';\nimport axios from 'axios'\n\n\nconst Newsletter = () => {\n    const toast = useToast();\n\n\n    // I'm not using any of these functions as I've used a third party for email newsletters\n    const [formData, setFormData] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n      });\n\n      const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n          ...formData,\n          [name]: value,\n        });\n      };\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const form = e.target;\n        const isValidForm = form.checkValidity();\n  \n        if (isValidForm) {\n\n            try {\n                const response = await axios.post(`${process.env.REACT_APP_BACKEND}/api/auth/newsletter`, formData)\n                console.log(response)\n              } catch (err) {\n                console.error(err.message)\n              }\n           \n            toast({\n                title: \"Subscribed\",\n                description: \"You've been subscribed to our newsletter.\",\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n            });\n\n            // set form back to blank after submitting\n            setFormData({\n                firstName: '',\n                lastName: '',\n                email: '',\n              });\n        }\n    }\n\n    return (\n        <Box\n            flex=\"1\"\n            position=\"relative\"\n            maxHeight=\"90vh\"\n            margin=\"auto\"\n            minWidth=\"200px\"\n            overflowY=\"auto\"\n            // ml={[5, 2]}\n            mt={[-2]}\n            mr=\"3em\"\n           \n            p={5}\n            bg=\"gray.100\"\n            borderRadius=\"md\"\n            boxShadow=\"md\"\n            display=\"flex\"\n            // flexDirection={[\"column\", \"column\", \"row\"]}\n        >\n\n          \n            <Box as=\"form\" onSubmit={handleSubmit}>\n                <VStack spacing={2}>\n                    <Text fontWeight={'500'} fontSize={'lg'} mb={2}>Newsletter</Text>\n                    <iframe\n                        src=\"https://embeds.beehiiv.com/329b6cdf-adf5-4de2-84a1-4c556ec21cf0?slim=true\"\n                        data-test-id=\"beehiiv-embed\"\n                        height=\"52\"\n                        title=\"iframe\"\n                        frameBorder=\"0\"\n                        scrolling=\"no\"\n                        style={{\n                          margin: 0,\n                          borderRadius: '0px !important',\n                          backgroundColor: 'transparent'\n                        }}\n                      />\n                    {/* <Input type=\"text\" id=\"firstName\" bg=\"white\" name=\"firstName\" placeholder=\"First Name\"  value={formData.firstName} onChange={handleInputChange} required />\n                    <Input type=\"text\" id=\"lastName\" bg=\"white\" name=\"lastName\" placeholder=\"Last Name\" value={formData.lastName} onChange={handleInputChange} required />\n                    <Input type=\"email\" id=\"email\" bg=\"white\" name=\"email\" placeholder=\"Email\" value={formData.email} onChange={handleInputChange} required />\n                    <Button type=\"submit\">Sign Up</Button> */}\n                </VStack>\n            </Box>\n        </Box>\n    )\n}\n\nexport default Newsletter;","import {\n  Box,\n  Container,\n  Stack,\n  SimpleGrid,\n  Text,\n  Link,\n  VisuallyHidden,\n  chakra,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { FaTwitter, FaYoutube, FaInstagram, FaFacebook } from 'react-icons/fa';\nimport Newsletter from './Newsletter';\n// import AppStoreBadge from '@/components/AppStoreBadge';\n// import PlayStoreBadge from '@/components/PlayStoreBadge';\n\nconst ListHeader = ({ children }) => {\n  return (\n    <Text fontWeight={'500'} fontSize={'lg'} mb={2}>\n      {children}\n    </Text>\n  );\n};\n\nconst SocialButton = ({children, label, href}) => {\n  return (\n    <chakra.button\n      bg={useColorModeValue('blackAlpha.100', 'whiteAlpha.100')}\n      rounded={'full'}\n      w={8}\n      h={8}\n      cursor={'pointer'}\n      as={'a'}\n      href={href}\n      display={'inline-flex'}\n      alignItems={'center'}\n      justifyContent={'center'}\n      transition={'background 0.3s ease'}\n      _hover={{\n        bg: useColorModeValue('blackAlpha.200', 'whiteAlpha.200'),\n      }}>\n      <VisuallyHidden>{label}</VisuallyHidden>\n      {children}\n    </chakra.button>\n  );\n};\n\nexport default function LargeWithAppLinksAndSocial() {\n  return (\n    <Box pt={5}\n      bg={useColorModeValue('gray.50', 'gray.900')}\n      color={useColorModeValue('gray.700', 'gray.200')}>\n      <Container as={Stack} maxW={'6xl'} py={10}>\n        <SimpleGrid columns={{ base: 1, sm: 2, md: 4 }} spacing={8}>\n          <Stack align={'flex-start'}>\n            <ListHeader>Main Mortgage</ListHeader>\n            <Link href={'#'}>About Us</Link>\n            <Link href={'/contact-page'}>Contact Us</Link>\n            <Link href={'#'}>Why Choose a Mortgage Agent</Link>\n          </Stack>\n\n          <Stack align={'flex-start'}>\n            <ListHeader>Resources</ListHeader>\n            <Link href={'/faq-page'}>FAQ</Link>\n            <Link href={'/glossary-page'}>Glossary</Link>\n            <Link href={'/doc-page'}>Documents You Need</Link>\n            <Link href={'/apply-page'}>Apply Online</Link>\n          </Stack>\n\n          <Stack align={'flex-start'}>\n            <ListHeader>Legal</ListHeader>\n            <Link href={'#'}>Privacy Policy</Link>\n            <Link href={'#'}>Terms of Service</Link>\n\n          </Stack>\n\n          <Stack align={'flex-start'}>\n  <Newsletter />\n</Stack>\n        </SimpleGrid>\n      </Container>\n\n      <Box\n    borderTopWidth={1}\n    borderStyle={'solid'}\n    borderColor={useColorModeValue('gray.200', 'gray.700')}>\n    <Container\n      as={Stack}\n      maxW={'6xl'}\n      py={4}\n      direction={{ base: 'column', md: 'row' }}\n      spacing={4}\n      justify={{ md: 'space-between' }}\n      align={{ md: 'center' }}>\n      <Text fontSize=\"11\">© 2023 <b>VERICO The Mortgage Professionals</b> License 10280 All Rights Reserved.\n*some restrictions may apply\n</Text>\n<Text fontSize=\"11\">\nPowered by <a href=\"https://www.gomaxsolutions.com/\" style={{fontWeight: 'bold'}}>GoMAX Solutions</a>.\n</Text>\n<Text fontSize=\"11\">\nWebsite by <a href=\"https://www.linkedin.com/in/cassie-leclair-931093b6/\" style={{fontWeight: 'bold'}}>Cassie LeClair</a>\n\n</Text>\n<Link fontSize=\"11\" href={'/admin-signin'} style={{fontWeight: 'bold'}}>Admin</Link>\n      <Stack direction={'row'} spacing={6}>\n        <SocialButton label={'Twitter'} href={'#'}>\n          <FaFacebook />\n        </SocialButton>\n        {/* <SocialButton label={'YouTube'} href={'#'}>\n          <FaYoutube />\n        </SocialButton> */}\n        <SocialButton label={'Instagram'} href={'#'}>\n          <FaInstagram />\n        </SocialButton>\n      </Stack>\n    </Container>\n  </Box>\n    </Box>\n  );\n}","import { type IconProps, Icon } from \"@chakra-ui/icon\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useFormControlContext } from \"./form-control\"\n\nconst [FormErrorStylesProvider, useFormErrorStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `FormErrorStylesContext`,\n  errorMessage: `useFormErrorStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormError />\" `,\n})\n\nexport { useFormErrorStyles }\nexport interface FormErrorMessageProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"FormErrorMessage\"> {}\n\n/**\n * Used to provide feedback about an invalid input,\n * and suggest clear instructions on how to fix it.\n */\nexport const FormErrorMessage = forwardRef<FormErrorMessageProps, \"div\">(\n  (props, ref) => {\n    const styles = useMultiStyleConfig(\"FormError\", props)\n    const ownProps = omitThemingProps(props)\n    const field = useFormControlContext()\n\n    if (!field?.isInvalid) return null\n\n    return (\n      <FormErrorStylesProvider value={styles}>\n        <chakra.div\n          {...field?.getErrorMessageProps(ownProps, ref)}\n          className={cx(\"chakra-form__error-message\", props.className)}\n          __css={{\n            display: \"flex\",\n            alignItems: \"center\",\n            ...styles.text,\n          }}\n        />\n      </FormErrorStylesProvider>\n    )\n  },\n)\n\nFormErrorMessage.displayName = \"FormErrorMessage\"\n\n/**\n * Used as the visual indicator that a field is invalid or\n * a field has incorrect values.\n */\nexport const FormErrorIcon = forwardRef<IconProps, \"svg\">((props, ref) => {\n  const styles = useFormErrorStyles()\n  const field = useFormControlContext()\n\n  if (!field?.isInvalid) return null\n\n  const _className = cx(\"chakra-form__error-icon\", props.className)\n\n  return (\n    <Icon\n      ref={ref}\n      aria-hidden\n      {...props}\n      __css={styles.icon}\n      className={_className}\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n      />\n    </Icon>\n  )\n})\n\nFormErrorIcon.displayName = \"FormErrorIcon\"\n","import {\n  Button,\n  Checkbox,\n  Flex,\n  Text,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Stack,\n  Image,\n  FormErrorMessage\n} from '@chakra-ui/react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport SpringButton from '../../../theme/SpringButon';\nimport axios from 'axios'\n\nexport default function SignUp() {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const onSubmit = async (e) => {\n    e.preventDefault()\n    if (password === confirmPassword) {\n      \n      try {\n        const response = await axios.post(`${process.env.REACT_APP_BACKEND}/api/auth/register`, {\n          email, password\n        })\n\n        // **incorporate first name and last name to request body later\n        // This post request is to sign the user up for the newsletter as well\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND}/api/subscribe`, {\n          email\n        })\n        // navigate(\"/\")\n  \n      } catch (err) {\n        console.error(err.message)\n      }\n    }\n  }\n\n  return (\n    <Stack minH={'100vh'} direction={{ base: 'column', md: 'row' }}>\n      <Flex p={8} flex={1} align={'center'} justify={'center'}>\n        <Stack spacing={4} w={'full'} maxW={'md'}>\n          <Heading fontSize={'2xl'}>Sign up</Heading>\n\n          <form onSubmit={onSubmit}>\n            <FormControl id=\"email\" isInvalid={email && !email.includes(\"@\")}>\n              <FormLabel>Email address</FormLabel>\n              <Input type=\"email\" value={email} onChange={e => setEmail(e.target.value)} />\n              <FormErrorMessage>\n                {email && !email.includes(\"@\") && \"Please enter a valid email.\"}\n              </FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"password\" isInvalid={password && password.length < 8}>\n              <FormLabel>Password</FormLabel>\n              <Input type=\"password\" autoComplete=\"off\" value={password} onChange={e => setPassword(e.target.value)} />\n              <FormErrorMessage>\n                {password && password.length < 8 && \"Password should be at least 8 characters long.\"}\n              </FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"confirm-password\">\n              <FormLabel>Confirm Password</FormLabel>\n              <Input type=\"password\" value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} />\n            </FormControl>\n\n            <Stack spacing={6}>\n              <SpringButton type=\"submit\">\n                Sign up\n              </SpringButton>\n              <Text \n                color={'blue.500'} \n                onClick={() => navigate('/sign-in')} \n                cursor=\"pointer\"\n              >\n                Already have an account? Sign in\n              </Text>\n            </Stack>\n          </form>\n\n        </Stack>\n      </Flex>\n      <Flex flex={1}>\n        <Image\n          alt={'Sign Up Image'}\n          objectFit={'cover'}\n          src={\n            'https://images.unsplash.com/photo-1486312338219-ce68d2c6f44d?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1352&q=80'\n          }\n        />\n      </Flex>\n    </Stack>\n  )\n}","import React from 'react';\nimport { Helmet } from \"react-helmet\";\nimport Header from '../../Main/header/Header';\n\nimport Footer from '../../Partials/footer/Footer';\nimport { Box, VStack } from \"@chakra-ui/react\";\nimport HeaderImage from '../../../assets/ficus.png';\nimport SignUp from './SignUp';\n\nconst SignUpPage = () => {\n    return (\n        <>\n            <Helmet>\n                <title>Apply for a Mortgage Today | Main Mortgage</title>\n                <meta name=\"description\" content=\"Apply for a mortgage with Main Mortgage. Our mortgage agent, Dora Main, will guide you through the process and answer any questions you have about home loans, interest rates, refinancing, and more.\" />\n                <meta name=\"keywords\" content=\"Mortgage application, Apply for mortgage, Main Mortgage, Dora Main, Home loan, Mortgage rates, Refinancing, Home purchase, Building home, Mortgage renewing, Switching mortgage, Canada, Mortgage procedure, Interest rates, Down payment, House building\" />\n            </Helmet>\n            <Box bgImage={`url(${HeaderImage})`} bgSize=\"cover\" bgPos=\"center\" m=\"1rem\" h=\"50vh\">\n                <Header />\n            </Box>\n            <Box\n                pb=\"5em\"\n                w={{ base: \"100%\", sm: \"100%\", md: \"80%\" }}\n                mx={{ base: \"0\", sm: \"0\", md: \"auto\" }}\n                bgColor=\"white\"\n                mt=\"-16em\"\n                p=\"2em\"\n                borderRadius=\"md\"\n                boxShadow=\"0 0 10px rgba(0,0,0,0.2)\"\n                mb=\"5em\"\n            >\n            <VStack pb=\"5\">\n                <SignUp />\n                \n            </VStack>\n            </Box>\n            <Footer />\n        </>\n    )\n}\n\nexport default SignUpPage;","import React from 'react';\nimport { animated, useSpring } from 'react-spring';\nimport { Button as ChakraButton } from \"@chakra-ui/react\";\n\nconst AnimatedButton = animated(ChakraButton);\n\nconst SpringButton = ({ children, ...props }) => {\n    const [springProps, setSpringProps] = useSpring(() => ({\n        scale: 1,\n        config: { mass: 4, tension: 150, friction: 10 },\n        \n    }));\n\n    return (\n        <AnimatedButton\n            onMouseEnter={() => setSpringProps({ scale: 1.1 })}\n            onMouseLeave={() => setSpringProps({ scale: 1 })}\n            style={{\n                transform: springProps.scale.interpolate(scale => `scale(${scale})`),\n            }}\n            {...props}\n        >\n            {children}\n        </AnimatedButton>\n    );\n};\n\nexport default SpringButton;","import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useFormControlContext, useFormControlStyles } from \"./form-control\"\n\nexport interface FormLabelProps\n  extends HTMLChakraProps<\"label\">,\n    ThemingProps<\"FormLabel\"> {\n  /**\n   * @type React.ReactElement\n   */\n  requiredIndicator?: React.ReactElement\n  /**\n   * @type React.ReactNode\n   */\n  optionalIndicator?: React.ReactNode\n}\n\n/**\n * Used to enhance the usability of form controls.\n *\n * It is used to inform users as to what information\n * is requested for a form field.\n *\n * ♿️ Accessibility: Every form field should have a form label.\n */\nexport const FormLabel = forwardRef<FormLabelProps, \"label\">(function FormLabel(\n  passedProps,\n  ref,\n) {\n  const styles = useStyleConfig(\"FormLabel\", passedProps)\n  const props = omitThemingProps(passedProps)\n\n  const {\n    className,\n    children,\n    requiredIndicator = <RequiredIndicator />,\n    optionalIndicator = null,\n    ...rest\n  } = props\n\n  const field = useFormControlContext()\n  const ownProps = field?.getLabelProps(rest, ref) ?? { ref, ...rest }\n\n  return (\n    <chakra.label\n      {...ownProps}\n      className={cx(\"chakra-form__label\", props.className)}\n      __css={{\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles,\n      }}\n    >\n      {children}\n      {field?.isRequired ? requiredIndicator : optionalIndicator}\n    </chakra.label>\n  )\n})\n\nFormLabel.displayName = \"FormLabel\"\n\nexport interface RequiredIndicatorProps extends HTMLChakraProps<\"span\"> {}\n\n/**\n * Used to show a \"required\" text or an asterisks (*) to indicate that\n * a field is required.\n */\nexport const RequiredIndicator = forwardRef<RequiredIndicatorProps, \"span\">(\n  function RequiredIndicator(props, ref) {\n    const field = useFormControlContext()\n    const styles = useFormControlStyles()\n\n    if (!field?.isRequired) return null\n\n    const className = cx(\"chakra-form__required-indicator\", props.className)\n\n    return (\n      <chakra.span\n        {...field?.getRequiredIndicatorProps(props, ref)}\n        __css={styles.requiredIndicator}\n        className={className}\n      />\n    )\n  },\n)\n\nRequiredIndicator.displayName = \"RequiredIndicator\"\n","import { createContext } from \"@chakra-ui/react-context\"\nimport { PropGetter } from \"@chakra-ui/react-types\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\"\nimport { useCallback, useId, useState } from \"react\"\n\nconst [FormControlStylesProvider, useFormControlStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `,\n})\n\nexport { useFormControlContext, useFormControlStyles }\n\nexport interface FormControlOptions {\n  /**\n   * If `true`, the form control will be required. This has 2 side effects:\n   * - The `FormLabel` will show a required indicator\n   * - The form element (e.g, Input) will have `aria-required` set to `true`\n   *\n   * @default false\n   */\n  isRequired?: boolean\n  /**\n   * If `true`, the form control will be disabled. This has 2 side effects:\n   * - The `FormLabel` will have `data-disabled` attribute\n   * - The form element (e.g, Input) will be disabled\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the form control will be invalid. This has 2 side effects:\n   * - The `FormLabel` and `FormErrorIcon` will have `data-invalid` set to `true`\n   * - The form element (e.g, Input) will have `aria-invalid` set to `true`\n   *\n   * @default false\n   */\n  isInvalid?: boolean\n  /**\n   * If `true`, the form control will be readonly\n   *\n   * @default false\n   */\n  isReadOnly?: boolean\n}\n\ninterface FormControlContext extends FormControlOptions {\n  /**\n   * The label text used to inform users as to what information is\n   * requested for a text field.\n   */\n  label?: string\n  /**\n   * The custom `id` to use for the form control. This is passed directly to the form element (e.g, Input).\n   * - The form element (e.g. Input) gets the `id`\n   * - The form label id: `form-label-${id}`\n   * - The form error text id: `form-error-text-${id}`\n   * - The form helper text id: `form-helper-text-${id}`\n   */\n  id?: string\n}\n\ntype FormControlProviderContext = Omit<\n  ReturnType<typeof useFormControlProvider>,\n  \"getRootProps\" | \"htmlProps\"\n>\n\nconst [FormControlProvider, useFormControlContext] =\n  createContext<FormControlProviderContext>({\n    strict: false,\n    name: \"FormControlContext\",\n  })\n\nfunction useFormControlProvider(props: FormControlContext) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props\n\n  // Generate all the required ids\n  const uuid = useId()\n  const id = idProp || `field-${uuid}`\n\n  const labelId = `${id}-label`\n  const feedbackId = `${id}-feedback`\n  const helpTextId = `${id}-helptext`\n\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the `aria-describedby` of the `input`.\n   */\n  const [hasFeedbackText, setHasFeedbackText] = useState(false)\n\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the `aria-describedby` of the `input`.\n   */\n  const [hasHelpText, setHasHelpText] = useState(false)\n\n  // Track whether the form element (e.g, `input`) has focus.\n  const [isFocused, setFocus] = useState(false)\n\n  const getHelpTextProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props,\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node) return\n        setHasHelpText(true)\n      }),\n    }),\n    [helpTextId],\n  )\n\n  const getLabelProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props.id !== undefined ? props.id : labelId,\n      htmlFor: props.htmlFor !== undefined ? props.htmlFor : id,\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId],\n  )\n\n  const getErrorMessageProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props,\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node) return\n        setHasFeedbackText(true)\n      }),\n      \"aria-live\": \"polite\",\n    }),\n    [feedbackId],\n  )\n\n  const getRootProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\",\n    }),\n    [htmlProps],\n  )\n\n  const getRequiredIndicatorProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props.children || \"*\",\n    }),\n    [],\n  )\n\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps,\n  }\n}\n\nexport interface FormControlProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"FormControl\">,\n    FormControlContext {}\n\n/**\n * FormControl provides context such as\n * `isInvalid`, `isDisabled`, and `isRequired` to form elements.\n *\n * This is commonly used in form elements such as `input`,\n * `select`, `textarea`, etc.\n *\n * @see Docs https://chakra-ui.com/docs/components/form-control\n */\nexport const FormControl = forwardRef<FormControlProps, \"div\">(\n  function FormControl(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props)\n    const ownProps = omitThemingProps(props)\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps)\n\n    const className = cx(\"chakra-form-control\", props.className)\n\n    return (\n      <FormControlProvider value={context}>\n        <FormControlStylesProvider value={styles}>\n          <chakra.div\n            {...getRootProps({}, ref)}\n            className={className}\n            __css={styles[\"container\"]}\n          />\n        </FormControlStylesProvider>\n      </FormControlProvider>\n    )\n  },\n)\n\nFormControl.displayName = \"FormControl\"\n\nexport interface FormHelperTextProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * FormHelperText\n *\n * Assistive component that conveys additional guidance\n * about the field, such as how it will be used and what\n * types in values should be provided.\n */\nexport const FormHelperText = forwardRef<FormHelperTextProps, \"div\">(\n  function FormHelperText(props, ref) {\n    const field = useFormControlContext()\n    const styles = useFormControlStyles()\n    const className = cx(\"chakra-form__helper-text\", props.className)\n    return (\n      <chakra.div\n        {...field?.getHelpTextProps(props, ref)}\n        __css={styles.helperText}\n        className={className}\n      />\n    )\n  },\n)\n\nFormHelperText.displayName = \"FormHelperText\"\n","import { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport { FormControlOptions, useFormControlContext } from \"./form-control\"\n\nexport interface UseFormControlProps<T extends HTMLElement>\n  extends FormControlOptions {\n  id?: string\n  onFocus?: React.FocusEventHandler<T>\n  onBlur?: React.FocusEventHandler<T>\n  disabled?: boolean\n  readOnly?: boolean\n  required?: boolean\n  \"aria-describedby\"?: string\n}\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n *\n * @internal\n */\nexport function useFormControl<T extends HTMLElement>(\n  props: UseFormControlProps<T>,\n) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } =\n    useFormControlProps(props)\n\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly),\n  }\n}\n\n/**\n * @internal\n */\nexport function useFormControlProps<T extends HTMLElement>(\n  props: UseFormControlProps<T>,\n) {\n  const field = useFormControlContext()\n\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props\n\n  const labelIds: string[] = props[\"aria-describedby\"]\n    ? [props[\"aria-describedby\"]]\n    : []\n\n  // Error message must be described first in all scenarios.\n  if (field?.hasFeedbackText && field?.isInvalid) {\n    labelIds.push(field.feedbackId)\n  }\n\n  if (field?.hasHelpText) {\n    labelIds.push(field.helpTextId)\n  }\n\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || undefined,\n    id: id ?? field?.id,\n    isDisabled: disabled ?? isDisabled ?? field?.isDisabled,\n    isReadOnly: readOnly ?? isReadOnly ?? field?.isReadOnly,\n    isRequired: required ?? isRequired ?? field?.isRequired,\n    isInvalid: isInvalid ?? field?.isInvalid,\n    onFocus: callAllHandlers(field?.onFocus, onFocus),\n    onBlur: callAllHandlers(field?.onBlur, onBlur),\n  }\n}\n","import { FormControlOptions, useFormControl } from \"@chakra-ui/form-control\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\ninterface InputOptions {\n  /**\n   * The border color when the input is focused. Use color keys in `theme.colors`\n   * @example\n   * focusBorderColor = \"blue.500\"\n   */\n  focusBorderColor?: string\n  /**\n   * The border color when the input is invalid. Use color keys in `theme.colors`\n   * @example\n   * errorBorderColor = \"red.500\"\n   */\n  errorBorderColor?: string\n  /**\n   * The native HTML `size` attribute to be passed to the `input`\n   */\n  htmlSize?: number\n}\n\ntype Omitted = \"disabled\" | \"required\" | \"readOnly\" | \"size\"\n\nexport interface InputProps\n  extends Omit<HTMLChakraProps<\"input\">, Omitted>,\n    InputOptions,\n    ThemingProps<\"Input\">,\n    FormControlOptions {}\n\n/**\n * Input\n *\n * Element that allows users enter single valued data.\n *\n * @see Docs https://chakra-ui.com/docs/components/input\n */\nexport const Input = forwardRef<InputProps, \"input\">(function Input(\n  props,\n  ref,\n) {\n  const { htmlSize, ...rest } = props\n\n  const styles = useMultiStyleConfig(\"Input\", rest)\n  const ownProps = omitThemingProps(rest)\n  const input = useFormControl<HTMLInputElement>(ownProps)\n  const _className = cx(\"chakra-input\", props.className)\n\n  return (\n    <chakra.input\n      size={htmlSize}\n      {...input}\n      __css={styles.field}\n      ref={ref}\n      className={_className}\n    />\n  )\n})\n\nInput.displayName = \"Input\"\n\n// This is used in `input-group.tsx`\nInput.id = \"Input\"\n"],"names":["Header","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_jsxs","Box","bg","px","children","Flex","h","alignItems","justifyContent","_jsx","IconButton","size","mt","icon","CloseIcon","HamburgerIcon","display","md","onClick","HStack","spacing","Link","as","RouterLink","to","_hover","boxShadow","Image","pt","objectFit","src","LogoImage","alt","flexDirection","base","sm","NavItem","title","routes","name","route","SpringButton","variant","pb","Stack","_ref","useColorModeValue","Menu","_ref2","_Fragment","MenuButton","py","rounded","transition","_expanded","ChevronDownIcon","ml","MenuList","map","item","idx","MenuItem","toast","useToast","_useState","useState","firstName","lastName","email","_useState2","_slicedToArray","formData","setFormData","flex","position","maxHeight","margin","minWidth","overflowY","mr","p","borderRadius","onSubmit","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","form","response","wrap","_context","prev","next","preventDefault","target","checkValidity","axios","post","concat","process","sent","console","log","t0","error","message","description","status","duration","isClosable","stop","apply","arguments","VStack","Text","fontWeight","fontSize","mb","height","frameBorder","scrolling","style","backgroundColor","ListHeader","SocialButton","label","href","chakra","button","w","cursor","VisuallyHidden","LargeWithAppLinksAndSocial","color","Container","maxW","SimpleGrid","columns","align","Newsletter","borderTopWidth","borderStyle","borderColor","direction","justify","FaFacebook","FaInstagram","_createContext","createContext","errorMessage","_createContext2","FormErrorStylesProvider","useFormErrorStyles","FormErrorMessage","forwardRef","props","ref","styles","useMultiStyleConfig","ownProps","omitThemingProps","field","useFormControlContext","isInvalid","jsx","value","div","_objectSpread","getErrorMessageProps","className","cx","__css","text","displayName","_className","Icon","fill","d","SignUp","navigate","useNavigate","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","minH","Heading","FormControl","id","includes","FormLabel","Input","type","onChange","length","autoComplete","Helmet","content","bgImage","HeaderImage","bgSize","bgPos","m","mx","bgColor","Footer","AnimatedButton","animated","ChakraButton","_objectWithoutProperties","_excluded","_useSpring","useSpring","scale","config","mass","tension","friction","_useSpring2","springProps","setSpringProps","onMouseEnter","onMouseLeave","transform","interpolate","passedProps","_a","useStyleConfig","_props$requiredIndica","requiredIndicator","RequiredIndicator","_props$optionalIndica","optionalIndicator","rest","getLabelProps","jsxs","textAlign","isRequired","useFormControlStyles","span","getRequiredIndicatorProps","FormControlStylesProvider","_createContext3","strict","_createContext4","FormControlProvider","_useFormControlProvid","idProp","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","undefined","forwardedRef","mergeRefs","node","dataAttr","htmlFor","getRootProps","role","onFocus","onBlur","useFormControlProvider","context","_excluded2","helperText","useFormControl","_useFormControlProps","useFormControlProps","disabled","readOnly","required","ariaAttr","_b","_c","labelIds","push","join","callAllHandlers","htmlSize","input"],"sourceRoot":""}