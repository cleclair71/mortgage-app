{"version":3,"file":"static/js/215.1633057f.chunk.js","mappings":"qVAuBe,SAASA,IACtB,IAAAC,GAAoCC,EAAAA,EAAAA,KAA5BC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAOJ,EAAPI,QAExB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAACC,GAAG,cAAcC,GAAI,EAAEC,SAAA,EAC1BJ,EAAAA,EAAAA,MAACK,EAAAA,EAAI,CAACC,EAAG,GAAIC,WAAY,SAAUC,eAAgB,gBAAgBJ,SAAA,EACjEK,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACTC,KAAM,KACNC,GAAG,SACHC,KAAMhB,GAASY,EAAAA,EAAAA,KAACK,EAAAA,EAAS,KAAML,EAAAA,EAAAA,KAACM,EAAAA,EAAa,IAC7C,aAAY,YACZC,QAAS,CAAEC,GAAI,QACfC,QAASrB,EAASE,EAAUD,KAE9BE,EAAAA,EAAAA,MAACmB,EAAAA,EAAM,CAACC,QAAS,EAAGb,WAAY,SAASH,SAAA,EACvCJ,EAAAA,EAAAA,MAACqB,EAAAA,EAAI,CAACC,GAAIC,EAAAA,GAAYC,GAAG,IAAIC,OAAQ,CAAEC,UAAW,OAAQtB,SAAA,EACxDK,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CAACrB,EAAE,QAAQsB,GAAG,MAClBC,UAAU,QAAQC,IAAKC,EAAWC,IAAI,SAAS,QAEnDhC,EAAAA,EAAAA,MAACmB,EAAAA,EAAM,CACLG,GAAI,MACJV,GAAG,SACHQ,QAAS,EACTa,cAAe,MACfjB,QAAS,CAAEkB,KAAMrC,EAAS,OAAS,OAAQoB,GAAI,OAAQkB,GAAI,QAAS/B,SAAA,EAEpEK,EAAAA,EAAAA,KAAC2B,EAAO,CAACC,MAAM,YAAYC,OAAQ,CACjC,CAAEC,KAAM,gBAAiBC,MAAO,4BAChC,CAAED,KAAM,YAAaC,MAAO,wBAC5B,CAAED,KAAM,UAAWC,MAAO,uBAC1B,CAAED,KAAM,wBAAyBC,MAAO,2BAK1C/B,EAAAA,EAAAA,KAAC2B,EAAO,CAACC,MAAM,QAAQC,OAAQ,CAC7B,CAAEC,KAAM,WAAYC,MAAO,eAC3B,CAAED,KAAM,eAAgBC,MAAO,qBAGjC/B,EAAAA,EAAAA,KAAC2B,EAAO,CAACC,MAAM,YAAYC,OAAQ,CACjC,CAAEC,KAAM,MAAOC,MAAO,aACtB,CAAED,KAAM,WAAYC,MAAO,kBAC3B,CAAED,KAAM,qBAAsBC,MAAO,uBAK3C/B,EAAAA,EAAAA,KAACgC,EAAAA,EAAY,CAACnB,GAAIC,EAAAA,GAAYC,GAAG,WAAWkB,QAAQ,UAAU/B,KAAM,KAAMC,GAAG,SAAQR,SAAC,iBAEvFP,GACCY,EAAAA,EAAAA,KAACR,EAAAA,GAAG,CAAC0C,GAAI,EAAG3B,QAAS,CAAEC,GAAI,QAASb,UAClCJ,EAAAA,EAAAA,MAAC4C,EAAAA,EAAK,CAACtB,GAAI,MAAOF,QAAS,EAAEhB,SAAA,EAC3BK,EAAAA,EAAAA,KAAC2B,EAAO,CAACC,MAAM,YAAYC,OAAQ,CACjC,CAAEC,KAAM,gBAAiBC,MAAO,4BAChC,CAAED,KAAM,YAAaC,MAAO,wBAC5B,CAAED,KAAM,UAAWC,MAAO,uBAC1B,CAAED,KAAM,wBAAyBC,MAAO,2BAK1C/B,EAAAA,EAAAA,KAAC2B,EAAO,CAACC,MAAM,QAAQC,OAAQ,CAC7B,CAAEC,KAAM,WAAYC,MAAO,eAC3B,CAAED,KAAM,aAAcC,MAAO,qBAG/B/B,EAAAA,EAAAA,KAAC2B,EAAO,CAACC,MAAM,YAAYC,OAAQ,CACjC,CAAEC,KAAM,MAAOC,MAAO,aACtB,CAAED,KAAM,WAAYC,MAAO,kBAC3B,CAAED,KAAM,qBAAsBC,MAAO,qBAKzC,OAGV,CAEA,IAAMJ,EAAU,SAAHS,GAA2B,IAArBR,EAAKQ,EAALR,MAAOC,EAAMO,EAANP,OAClBpC,GAAK4C,EAAAA,EAAAA,IAAkB,WAAY,YACzC,OACErC,EAAAA,EAAAA,KAACsC,EAAAA,EAAI,CAAA3C,SACF,SAAA4C,GAASA,EAANnD,OAAM,OACRG,EAAAA,EAAAA,MAAAiD,EAAAA,SAAA,CAAA7C,SAAA,EACEJ,EAAAA,EAAAA,MAACkD,EAAAA,EAAU,CACT5B,GAAID,EAAAA,EACJlB,GAAI,EACJgD,GAAI,EACJC,QAAS,KACTC,WAAY,eACZC,UAAW,CAAEpD,GAAAA,GACbuB,OAAQ,CAAEvB,GAAAA,GAAKE,SAAA,CACdiC,EAAM,KAAC5B,EAAAA,EAAAA,KAAC8C,EAAAA,EAAe,CAACC,GAAI,QAE/B/C,EAAAA,EAAAA,KAACgD,EAAAA,EAAQ,CAAArD,SACNkC,EAAOoB,KAAI,SAACC,EAAMC,GAAG,OACpBnD,EAAAA,EAAAA,KAACoD,EAAAA,EAAQ,CAACvC,GAAIC,EAAAA,GAAYC,GAAImC,EAAKnB,MAAMpC,SACtCuD,EAAKpB,MADuCqB,EAEpC,QAGd,GAIX,C,6PC1BA,EAnGmB,WAAO,IAADf,EACfiB,GAAQC,EAAAA,EAAAA,KAIdC,GAAgCC,EAAAA,EAAAA,UAAS,CACrCC,UAAW,GACXC,SAAU,GACVC,MAAO,KACPC,GAAAC,EAAAA,EAAAA,GAAAN,EAAA,GAJGO,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GA+C5B,OACI5D,EAAAA,EAAAA,KAACR,EAAAA,GAAG,CACAwE,KAAK,IACLC,SAAS,WACTC,UAAU,OACVC,OAAO,OACPC,SAAS,QACTC,UAAU,OAEVlE,GAAI,EAAE,GACNmE,GAAG,MAEHC,EAAG,EACH9E,GAAG,WACH+E,aAAa,KACbvD,UAAU,KACVV,QAAQ,OACRZ,UAIAK,EAAAA,EAAAA,KAACR,EAAAA,GAAG,CAACqB,GAAG,OAAO4D,SArDL,SAAAC,GAAA,OAAAtC,EAAAA,IAAAuC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAC,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIgB,GAHzCN,EAAEO,iBAEIN,EAAOD,EAAEQ,QACKP,EAAKQ,gBAET,CAADL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGgBI,EAAAA,EAAMC,KAAK,GAADC,OAAIC,wBAA6B,wBAAwB9B,GAAS,OAA7FmB,EAAQE,EAAAU,KACdC,QAAQC,IAAId,GAASE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAErBW,QAAQG,MAAMd,EAAAa,GAAIE,SAAQ,QAG9B7C,EAAM,CACFzB,MAAO,aACPuE,YAAa,4CACbC,OAAQ,UACRC,SAAU,IACVC,YAAY,IAIhBvC,EAAY,CACRN,UAAW,GACXC,SAAU,GACVC,MAAO,KACN,yBAAAwB,EAAAoB,OAAA,GAAAzB,EAAA,oBAEZ0B,MAAA,KAAAC,UAAA,EAuB6C9G,UAClCJ,EAAAA,EAAAA,MAACmH,EAAAA,EAAM,CAAC/F,QAAS,EAAEhB,SAAA,EACfK,EAAAA,EAAAA,KAAC2G,EAAAA,EAAI,CAACC,WAAY,MAAOC,SAAU,KAAMC,GAAI,EAAEnH,SAAC,gBAChDK,EAAAA,EAAAA,KAAA,UACIqB,IAAI,4EACJ,eAAa,gBACb0F,OAAO,KACPnF,MAAM,SACNoF,YAAY,IACZC,UAAU,KACVC,MAAO,CACL/C,OAAQ,EACRK,aAAc,iBACd2C,gBAAiB,uBAW3C,ECtFMC,EAAa,SAAHhF,GAAsB,IAAhBzC,EAAQyC,EAARzC,SACpB,OACEK,EAAAA,EAAAA,KAAC2G,EAAAA,EAAI,CAACC,WAAY,MAAOC,SAAU,KAAMC,GAAI,EAAEnH,SAC5CA,GAGP,EAEM0H,EAAe,SAAH9E,GAAiC,IAA5B5C,EAAQ4C,EAAR5C,SAAU2H,EAAK/E,EAAL+E,MAAOC,EAAIhF,EAAJgF,KACtC,OACEhI,EAAAA,EAAAA,MAACiI,EAAAA,EAAOC,OAAM,CACZhI,IAAI4C,EAAAA,EAAAA,IAAkB,iBAAkB,kBACxCM,QAAS,OACT+E,EAAG,EACH7H,EAAG,EACH8H,OAAQ,UACR9G,GAAI,IACJ0G,KAAMA,EACNhH,QAAS,cACTT,WAAY,SACZC,eAAgB,SAChB6C,WAAY,uBACZ5B,OAAQ,CACNvB,IAAI4C,EAAAA,EAAAA,IAAkB,iBAAkB,mBACxC1C,SAAA,EACFK,EAAAA,EAAAA,KAAC4H,EAAAA,GAAc,CAAAjI,SAAE2H,IAChB3H,IAGP,EAEe,SAASkI,IACtB,OACEtI,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAAC2B,GAAI,EACP1B,IAAI4C,EAAAA,EAAAA,IAAkB,UAAW,YACjCyF,OAAOzF,EAAAA,EAAAA,IAAkB,WAAY,YAAY1C,SAAA,EACjDK,EAAAA,EAAAA,KAAC+H,EAAAA,EAAS,CAAClH,GAAIsB,EAAAA,EAAO6F,KAAM,MAAOtF,GAAI,GAAG/C,UACxCJ,EAAAA,EAAAA,MAAC0I,EAAAA,EAAU,CAACC,QAAS,CAAEzG,KAAM,EAAGC,GAAI,EAAGlB,GAAI,GAAKG,QAAS,EAAEhB,SAAA,EACzDJ,EAAAA,EAAAA,MAAC4C,EAAAA,EAAK,CAACgG,MAAO,aAAaxI,SAAA,EACzBK,EAAAA,EAAAA,KAACoH,EAAU,CAAAzH,SAAC,mBACZK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAC2G,KAAM,IAAI5H,SAAC,cACjBK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAC2G,KAAM,gBAAgB5H,SAAC,gBAC7BK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAC2G,KAAM,IAAI5H,SAAC,oCAGnBJ,EAAAA,EAAAA,MAAC4C,EAAAA,EAAK,CAACgG,MAAO,aAAaxI,SAAA,EACzBK,EAAAA,EAAAA,KAACoH,EAAU,CAAAzH,SAAC,eACZK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAC2G,KAAM,YAAY5H,SAAC,SACzBK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAC2G,KAAM,iBAAiB5H,SAAC,cAC9BK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAC2G,KAAM,YAAY5H,SAAC,wBACzBK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAC2G,KAAM,cAAc5H,SAAC,qBAG7BJ,EAAAA,EAAAA,MAAC4C,EAAAA,EAAK,CAACgG,MAAO,aAAaxI,SAAA,EACzBK,EAAAA,EAAAA,KAACoH,EAAU,CAAAzH,SAAC,WACZK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAC2G,KAAM,IAAI5H,SAAC,oBACjBK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAC2G,KAAM,IAAI5H,SAAC,yBAInBK,EAAAA,EAAAA,KAACmC,EAAAA,EAAK,CAACgG,MAAO,aAAaxI,UACnCK,EAAAA,EAAAA,KAACoI,EAAU,YAKPpI,EAAAA,EAAAA,KAACR,EAAAA,GAAG,CACN6I,eAAgB,EAChBC,YAAa,QACbC,aAAalG,EAAAA,EAAAA,IAAkB,WAAY,YAAY1C,UACvDJ,EAAAA,EAAAA,MAACwI,EAAAA,EAAS,CACRlH,GAAIsB,EAAAA,EACJ6F,KAAM,MACNtF,GAAI,EACJ8F,UAAW,CAAE/G,KAAM,SAAUjB,GAAI,OACjCG,QAAS,EACT8H,QAAS,CAAEjI,GAAI,iBACf2H,MAAO,CAAE3H,GAAI,UAAWb,SAAA,EACxBJ,EAAAA,EAAAA,MAACoH,EAAAA,EAAI,CAACE,SAAS,KAAIlH,SAAA,CAAC,cAAOK,EAAAA,EAAAA,KAAA,KAAAL,SAAG,sCAAqC,uEAGzEJ,EAAAA,EAAAA,MAACoH,EAAAA,EAAI,CAACE,SAAS,KAAIlH,SAAA,CAAC,eACTK,EAAAA,EAAAA,KAAA,KAAGuH,KAAK,kCAAkCL,MAAO,CAACN,WAAY,QAAQjH,SAAC,oBAAmB,QAErGJ,EAAAA,EAAAA,MAACoH,EAAAA,EAAI,CAACE,SAAS,KAAIlH,SAAA,CAAC,eACTK,EAAAA,EAAAA,KAAA,KAAGuH,KAAK,uDAAuDL,MAAO,CAACN,WAAY,QAAQjH,SAAC,uBAGvGK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAACiG,SAAS,KAAKU,KAAM,gBAAiBL,MAAO,CAACN,WAAY,QAAQjH,SAAC,WAClEJ,EAAAA,EAAAA,MAAC4C,EAAAA,EAAK,CAACqG,UAAW,MAAO7H,QAAS,EAAEhB,SAAA,EAClCK,EAAAA,EAAAA,KAACqH,EAAY,CAACC,MAAO,UAAWC,KAAM,IAAI5H,UACxCK,EAAAA,EAAAA,KAAC0I,EAAAA,IAAU,OAKb1I,EAAAA,EAAAA,KAACqH,EAAY,CAACC,MAAO,YAAaC,KAAM,IAAI5H,UAC1CK,EAAAA,EAAAA,KAAC2I,EAAAA,IAAW,gBAOtB,C,mHCpHMC,EAAY,CAChB,CAAC9G,KAAM,MAAOC,MAAO,aACrB,CAACD,KAAM,WAAYC,MAAO,mBAwC5B,IApCqB,WACjB,IAAA8G,GAA0BC,EAAAA,EAAAA,GAAc,sBACxC,OAD6DjF,EAAAA,EAAAA,GAAAgF,EAAA,GAAvC,IAExBtJ,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CACFwE,KAAK,IACLC,SAAS,SACT8E,IAAI,IACJ7E,UAAU,OACVE,SAAS,QACTC,UAAU,OACVtB,GAAI,CAAC,EAAG,GACR5C,GAAI,CAAC,GAAI,GACToE,EAAG,EACH9E,GAAG,WACH+E,aAAa,KACbvD,UAAU,KAAItB,SAAA,EAEdK,EAAAA,EAAAA,KAACgJ,EAAAA,EAAO,CAAC9I,KAAK,KAAK4G,GAAI,EAAEnH,SAAC,eAC1BK,EAAAA,EAAAA,KAAC0G,EAAAA,EAAM,CAACyB,MAAM,QAAQxH,QAAS,EAAEhB,SAC9BiJ,EAAU3F,KAAI,SAACgG,EAAKC,GAAK,OACxBlJ,EAAAA,EAAAA,KAACR,EAAAA,GAAG,CAEF+E,EAAG,EACH9E,GAAG,QACH0J,MAAM,OACN3E,aAAa,KACbvD,UAAU,KAAItB,UAEdK,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAACC,GAAIC,EAAAA,GAAYC,GAAIkI,EAAIlH,MAAMpC,SAAEsJ,EAAInH,QAPrCoH,EAQD,SAIV,IACJ,C,+GCxCME,GAAiBC,EAAAA,EAAAA,GAASC,EAAAA,GAuBhC,IArBqB,SAAHlH,GAAgC,IAA1BzC,EAAQyC,EAARzC,SAAa4J,GAAKC,EAAAA,EAAAA,GAAApH,EAAAqH,GACtCC,GAAsCC,EAAAA,EAAAA,KAAU,iBAAO,CACnDC,MAAO,EACPC,OAAQ,CAAEC,KAAM,EAAGC,QAAS,IAAKC,SAAU,IAE9C,IAAEC,GAAApG,EAAAA,EAAAA,GAAA6F,EAAA,GAJIQ,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAMlC,OACIjK,EAAAA,EAAAA,KAACoJ,GAAcgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACXC,aAAc,kBAAMF,EAAe,CAAEP,MAAO,KAAM,EAClDU,aAAc,kBAAMH,EAAe,CAAEP,MAAO,GAAI,EAChD1C,MAAO,CACHqD,UAAWL,EAAYN,MAAMY,aAAY,SAAAZ,GAAK,eAAAjE,OAAaiE,EAAK,UAEhEL,GAAK,IAAA5J,SAERA,IAGb,C,6dCVA8K,GAA0DC,EAAAA,EAAAA,GAExD,CACA5I,KAAA,2BACA6I,aAAA,kHACDC,GAAA/G,EAAAA,EAAAA,GAAA4G,EAAA,GALMI,EAAAD,EAAA,GAA2BE,EAAoBF,EAAA,GA+DtDG,GACEL,EAAAA,EAAAA,GAA0C,CACxCM,QAAQ,EACRlJ,KAAM,uBACPmJ,GAAApH,EAAAA,EAAAA,GAAAkH,EAAA,GAJIG,EAAAD,EAAA,GAAqBE,EAAqBF,EAAA,GAkJ1C,IAAMG,GAAcC,EAAAA,EAAAA,IACzB,SAAqB9B,EAAO+B,GAC1B,IAAMC,GAASC,EAAAA,EAAAA,IAAoB,OAAQjC,GAE3CkC,EAhJJ,SAAgClC,GAC9B,IACMmC,EAMFnC,EANFoC,GACAC,EAKErC,EALFqC,WACAC,EAIEtC,EAJFsC,UACAC,EAGEvC,EAHFuC,WACAC,EAEExC,EAFFwC,WACGC,GAAAxC,EAAAA,EAAAA,GACDD,EAAAE,GAGEwC,GAAOC,EAAAA,EAAAA,SACPP,EAAKD,GAAA,SAAA/F,OAAmBsG,GAExBE,EAAA,GAAAxG,OAAagG,EAAE,UACfS,EAAA,GAAAzG,OAAgBgG,EAAE,aAClBU,EAAA,GAAA1G,OAAgBgG,EAAE,aAMxBpI,GAA8CC,EAAAA,EAAAA,WAAS,GAAKI,GAAAC,EAAAA,EAAAA,GAAAN,EAAA,GAArD+I,EAAA1I,EAAA,GAAiB2I,EAAkB3I,EAAA,GAM1C4I,GAAsChJ,EAAAA,EAAAA,WAAS,GAAKiJ,GAAA5I,EAAAA,EAAAA,GAAA2I,EAAA,GAA7CE,EAAAD,EAAA,GAAaE,EAAcF,EAAA,GAGlCG,GAA8BpJ,EAAAA,EAAAA,WAAS,GAAKqJ,GAAAhJ,EAAAA,EAAAA,GAAA+I,EAAA,GAArCE,EAAAD,EAAA,GAAWE,EAAQF,EAAA,GAEpBG,GAAmBC,EAAAA,EAAAA,cACvB,eAACC,EAAAzG,UAAA0G,OAAA,QAAAC,IAAA3G,UAAA,GAAAA,UAAA,GAAQ,CAAC,EAAG4G,EAAA5G,UAAA0G,OAAA,QAAAC,IAAA3G,UAAA,GAAAA,UAAA,GAAe,YAAA2D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAC1BuB,GAAIU,GACDa,GAAA,IAKH5B,KAAKgC,EAAAA,EAAAA,IAAUD,GAAc,SAACE,GACvBA,GACLZ,GAAe,EACjB,KAAC,GAEH,CAACN,IAGGmB,GAAgBP,EAAAA,EAAAA,cACpB,eAACC,EAAAzG,UAAA0G,OAAA,QAAAC,IAAA3G,UAAA,GAAAA,UAAA,GAAQ,CAAC,EAAG4G,EAAA5G,UAAA0G,OAAA,QAAAC,IAAA3G,UAAA,GAAAA,UAAA,GAAe,YAAA2D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvB8C,GAAA,IACH5B,IAAK+B,EACL,cAAcI,EAAAA,EAAAA,IAASX,GACvB,iBAAiBW,EAAAA,EAAAA,IAAS3B,GAC1B,gBAAgB2B,EAAAA,EAAAA,IAAS5B,GACzB,iBAAiB4B,EAAAA,EAAAA,IAAS1B,GAC1BJ,QAAiB,IAAbuB,EAAMvB,GAAmBuB,EAAMvB,GAAKQ,EACxCuB,aAA2B,IAAlBR,EAAMQ,QAAwBR,EAAMQ,QAAU/B,GAAA,GAEzD,CAACA,EAAIG,EAAYgB,EAAWjB,EAAWE,EAAYI,IAG/CwB,GAAuBV,EAAAA,EAAAA,cAC3B,eAACC,EAAAzG,UAAA0G,OAAA,QAAAC,IAAA3G,UAAA,GAAAA,UAAA,GAAQ,CAAC,EAAG4G,EAAA5G,UAAA0G,OAAA,QAAAC,IAAA3G,UAAA,GAAAA,UAAA,GAAe,YAAA2D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAC1BuB,GAAIS,GACDc,GAAA,IAKH5B,KAAKgC,EAAAA,EAAAA,IAAUD,GAAc,SAACE,GACvBA,GACLhB,GAAmB,EACrB,IACA,YAAa,aAEf,CAACH,IAGGwB,GAAeX,EAAAA,EAAAA,cACnB,eAACC,EAAAzG,UAAA0G,OAAA,QAAAC,IAAA3G,UAAA,GAAAA,UAAA,GAAQ,CAAC,EAAG4G,EAAA5G,UAAA0G,OAAA,QAAAC,IAAA3G,UAAA,GAAAA,UAAA,GAAe,YAAA2D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvB8C,GACAlB,GAAA,IACHV,IAAK+B,EACLQ,KAAM,YAER,CAAC7B,IAGG8B,GAA4Bb,EAAAA,EAAAA,cAChC,eAACC,EAAAzG,UAAA0G,OAAA,QAAAC,IAAA3G,UAAA,GAAAA,UAAA,GAAQ,CAAC,EAAG4G,EAAA5G,UAAA0G,OAAA,QAAAC,IAAA3G,UAAA,GAAAA,UAAA,GAAe,YAAA2D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvB8C,GAAA,IACH5B,IAAK+B,EACLQ,KAAM,eACN,eAAe,EACflO,SAAUuN,EAAMvN,UAAY,QAE9B,IAGF,MAAO,CACLiM,aAAcA,EACdC,YAAaA,EACbE,aAAcA,EACdD,aAAcA,EACdgB,YAAaA,EACbiB,QAAS,kBAAMhB,GAAS,EAAI,EAC5BiB,OAAQ,kBAAMjB,GAAS,EAAK,EAC5BT,gBAAAA,EACAC,mBAAAA,EACAG,YAAAA,EACAC,eAAAA,EACAhB,GAAAA,EACAQ,QAAAA,EACAC,WAAAA,EACAC,WAAAA,EACAL,UAAAA,EACAgB,iBAAAA,EACAW,qBAAAA,EACAC,aAAAA,EACAJ,cAAAA,EACAM,0BAAAA,EAEJ,CAwBQG,EALaC,EAAAA,EAAAA,IAAiB3E,IAEhCqE,EAAAnC,EAAAmC,aAEGO,GADQ1C,EAAXO,WACGxC,EAAAA,EAAAA,GAAAiC,EAAA2C,IAGCC,GAAYC,EAAAA,EAAAA,IAAG,sBAAuB/E,EAAM8E,WAElD,OACEE,EAAAA,EAAAA,KAACrD,EAAA,CAAoBsD,MAAOL,EAC1BxO,UAAA4O,EAAAA,EAAAA,KAAC1D,EAAA,CAA0B2D,MAAOjD,EAChC5L,UAAA4O,EAAAA,EAAAA,KAAC/G,EAAAA,EAAOiH,KAAArE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACFwD,EAAa,CAAC,EAAGtC,IAAG,IACxB+C,UAAAA,EACAK,MAAOnD,EAAkB,gBAKnC,IAGFH,EAAYuD,YAAc,eAWItD,EAAAA,EAAAA,IAC5B,SAAwB9B,EAAO+B,GAC7B,IAAMsD,EAAQzD,IACRI,EAAST,IACTuD,GAAYC,EAAAA,EAAAA,IAAG,2BAA4B/E,EAAM8E,WACvD,OACEE,EAAAA,EAAAA,KAAC/G,EAAAA,EAAOiH,KAAArE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACF,MAAAwE,OAAA,EAAAA,EAAO5B,iBAAiBzD,EAAO+B,IAAA,IACnCoD,MAAOnD,EAAOsD,WACdR,UAAAA,IAGN,IAGaM,YAAc,gB,iSC7PtB,SAASG,EACdvF,GAEA,IAAAwF,EACEC,EAAoBzF,GADduC,EAAAiD,EAAAjD,WAAYD,EAAAkD,EAAAlD,UAAWE,EAAAgD,EAAAhD,WAAYH,EAAAmD,EAAAnD,WAAeqD,GAAAzF,EAAAA,EAAAA,GAAAuF,EAAAtF,GAG1D,OAAAW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK6E,GAAA,IACHC,SAAUpD,EACVqD,SAAUpD,EACVqD,SAAUxD,EACV,gBAAgByD,EAAAA,EAAAA,IAASxD,GACzB,iBAAiBwD,EAAAA,EAAAA,IAASzD,GAC1B,iBAAiByD,EAAAA,EAAAA,IAAStD,IAE9B,CAKO,SAASiD,EACdzF,GA5CF,IAAA+F,EAAAC,EAAAC,EA8CQZ,GAAQzD,EAAAA,EAAAA,MAGZQ,EAWEpC,EAXFoC,GACAuD,EAUE3F,EAVF2F,SACAC,EASE5F,EATF4F,SACAC,EAQE7F,EARF6F,SACAxD,EAOErC,EAPFqC,WACAC,EAMEtC,EANFsC,UACAE,EAKExC,EALFwC,WACAD,EAIEvC,EAJFuC,WACAiC,EAGExE,EAHFwE,QACAC,EAEEzE,EAFFyE,OACGiB,GAAAzF,EAAAA,EAAAA,GACDD,EAAA6E,GAEEqB,EAAqBlG,EAAM,oBAC7B,CAACA,EAAM,qBACP,GAWJ,OARI,MAAAqF,OAAA,EAAAA,EAAOtC,mBAAmB,MAAAsC,OAAA,EAAAA,EAAO/C,YACnC4D,EAASC,KAAKd,EAAMxC,aAGlB,MAAAwC,OAAA,EAAAA,EAAOlC,cACT+C,EAASC,KAAKd,EAAMvC,aAGtBjC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK6E,GAAA,IACH,mBAAoBQ,EAASE,KAAK,WAAQ,EAC1ChE,GAAI,MAAAA,EAAAA,EAAM,MAAAiD,OAAA,EAAAA,EAAOjD,GACjBG,WAAY,OAAAwD,EAAA,MAAAJ,EAAAA,EAAYpD,GAAZwD,EAA0B,MAAAV,OAAA,EAAAA,EAAO9C,WAC7CC,WAAY,OAAAwD,EAAA,MAAAJ,EAAAA,EAAYpD,GAAZwD,EAA0B,MAAAX,OAAA,EAAAA,EAAO7C,WAC7CH,WAAY,OAAA4D,EAAA,MAAAJ,EAAAA,EAAYxD,GAAZ4D,EAA0B,MAAAZ,OAAA,EAAAA,EAAOhD,WAC7CC,UAAW,MAAAA,EAAAA,EAAa,MAAA+C,OAAA,EAAAA,EAAO/C,UAC/BkC,SAAS6B,EAAAA,EAAAA,IAAgB,MAAAhB,OAAA,EAAAA,EAAOb,QAASA,GACzCC,QAAQ4B,EAAAA,EAAAA,IAAgB,MAAAhB,OAAA,EAAAA,EAAOZ,OAAQA,IAE3C,C,kKCzCa6B,GAAQxE,EAAAA,EAAAA,IAAgC,SACnD9B,EACA+B,GAEA,IAAQwE,EAAsBvG,EAAtBuG,SAAab,GAAAzF,EAAAA,EAAAA,GAASD,EAAAE,GAExB8B,GAASC,EAAAA,EAAAA,IAAoB,QAASyD,GACtCc,GAAW7B,EAAAA,EAAAA,IAAiBe,GAC5Be,GAAQlB,EAAAA,EAAAA,GAAiCiB,GACzCE,GAAa3B,EAAAA,EAAAA,IAAG,eAAgB/E,EAAM8E,WAE5C,OACEE,EAAAA,EAAAA,KAAC/G,EAAAA,EAAOwI,OAAA5F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACNlK,KAAM4P,GACFE,GAAA,IACJtB,MAAOnD,EAAOqD,MACdtD,IAAAA,EACA+C,UAAW4B,IAGjB,IAEAJ,EAAMlB,YAAc,QAGpBkB,EAAMlE,GAAK,O,wSCtDEuE,GAAU7E,EAAAA,EAAAA,IAA+B,SACpD9B,EACA+B,GAEA,IAAA6E,GASIC,EAAAA,EAAAA,IAAe,UAAW7G,GAR5B8G,EAAAF,EAAAE,gBACAC,EAAAH,EAAAG,kBACAjI,EAAA8H,EAAA9H,eACAkI,EAAAJ,EAAAI,iBACAC,EAAAL,EAAAK,YACAlI,EAAA6H,EAAA7H,YACAC,EAAA4H,EAAA5H,YACGgD,GAAA/B,EAAAA,EAAAA,GAAA2G,EAAA1G,GAELgH,GAKIvC,EAAAA,EAAAA,IAAiB3E,GAJnB8E,EAAAoC,EAAApC,UAAAqC,EAAAD,EACAE,YAAAA,OAAA,IAAAD,EAAc,aAAAA,EACdhC,EAAA+B,EAAA/B,MACGO,GAAAzF,EAAAA,EAAAA,GAAAiH,EAAArC,GAGCwC,EAAgB,CACpBC,SAAU,CACRR,gBACEA,GAAmBE,GAAoBC,GAAe,MACxDzJ,OAAQ,QAEV+J,WAAY,CACVR,kBACEA,GAAqBjI,GAAkBmI,GAAe,MACxDrH,MAAO,SAIX,OACEoF,EAAAA,EAAAA,KAAC/G,EAAAA,EAAOuJ,IAAA3G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACNkB,IAAAA,EACA,mBAAkBqF,GACd1B,GAAA,IACJP,OAAAtE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKmB,GAAA,IACHyF,OAAQ,IAERzI,YAAAA,EACAD,YAAAA,GACGsI,EAAcD,IACdjC,GAELL,WAAWC,EAAAA,EAAAA,IAAG,iBAAkBD,KAGtC,IAQA6B,EAAQvB,YAAc,S,mGC3Df,SAAS7F,EACdmI,GAEW,IADXC,EAAAzK,UAAA0G,OAAA,QAAAC,IAAA3G,UAAA,GAAAA,UAAA,GAAgC,CAAC,EAEjC0K,EAAiCD,EAAzBE,IAAAA,OAAA,IAAAD,GAAMA,EAAME,EAAaH,EAAbG,SAEZC,GAAcC,EAAAA,EAAAA,KAAdD,UAEFE,EAAUC,MAAMC,QAAQT,GAASA,EAAQ,CAACA,GAE5CU,EAAiBF,MAAMC,QAAQL,GAAYA,EAAW,CAACA,GAC3DM,EAAiBA,EAAeC,QAAO,SAACC,GAAA,OAAW,MAALA,CAAS,IAEvD,IAAAtO,GAA0BC,EAAAA,EAAAA,WAAS,WACjC,OAAOgO,EAAQvO,KAAI,SAAC6O,EAAO5I,GAAA,MAAW,CACpC6I,MAAOD,EACPE,QAASZ,IACHO,EAAezI,GACjBoI,IAAYW,WAAWH,GAAOE,QACpC,GACF,IAACpO,GAAAC,EAAAA,EAAAA,GAAAN,EAAA,GAPMiL,EAAA5K,EAAA,GAAOsO,EAAQtO,EAAA,GAiDtB,OAxCAuO,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAMd,IACZY,EACEV,EAAQvO,KAAI,SAAC6O,GAAA,MAAW,CACtBC,MAAOD,EACPE,QAASI,EAAIH,WAAWH,GAAOE,QACjC,KAGF,IAAMK,EAAMb,EAAQvO,KAAI,SAAC6O,GAAA,OAAUM,EAAIH,WAAWH,EAAM,IAElDQ,EAAU,SAACC,GACfL,GAAS,SAAC9M,GACR,OAAOA,EAAKoN,QAAQvP,KAAI,SAACC,GACvB,OAAIA,EAAK6O,QAAUQ,EAAIR,OAAO3H,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYlH,GAAA,IAAM8O,QAASO,EAAIP,UACtD9O,CACT,GACF,GACF,EAUA,OARAmP,EAAII,SAAQ,SAACC,GACoB,oBAApBA,EAAIC,YACbD,EAAIC,YAAYL,GAEhBI,EAAIE,iBAAiB,SAAUN,EAEnC,IAEO,WACLD,EAAII,SAAQ,SAACC,GACuB,oBAAvBA,EAAIG,eACbH,EAAIG,eAAeP,GAEnBI,EAAII,oBAAoB,SAAUR,EAEtC,GACF,CAEF,GAAG,CAAChB,IAEG9C,EAAMvL,KAAI,SAACC,GAAA,OAASA,EAAK8O,OAAO,GACzC,C,yFCrDO,SAASe,EAAwBxJ,GACtC,IACSyJ,EAILzJ,EAJFiF,MACAyE,EAGE1J,EAHF0J,aACAC,EAEE3J,EAFF2J,SAAAC,EAEE5J,EADF6J,aAAAA,OAAA,IAAAD,EAAe,SAAC/N,EAAMC,GAAA,OAASD,IAASC,CAAA,EAAA8N,EAGpCE,GAAeC,EAAAA,EAAAA,GAAeJ,GAC9BK,GAAmBD,EAAAA,EAAAA,GAAeF,GAExC7P,GAAkDC,EAAAA,EAAAA,UAASyP,GAAiBrP,GAAAC,EAAAA,EAAAA,GAAAN,EAAA,GAArEiQ,EAAA5P,EAAA,GAAmB6P,EAAoB7P,EAAA,GACxC8P,OAA2B,IAAdV,EACbxE,EAAQkF,EAAaV,EAAYQ,EAEjCtB,GAAWoB,EAAAA,EAAAA,IACf,SAACjO,GACC,IACMsO,EAA4B,oBAATtO,EADVA,EACuCmJ,GAASnJ,EAE1DkO,EAAiB/E,EAAOmF,KAIxBD,GACHD,EAAqBE,GAGvBN,EAAaM,GACf,GACA,CAACD,EAAYL,EAAc7E,EAAO+E,IAGpC,MAAO,CAAC/E,EAAO0D,EACjB,C","sources":["components/Main/header/Header.jsx","components/Partials/footer/Newsletter.jsx","components/Partials/footer/Footer.jsx","components/Resources/ResourceCard.jsx","theme/SpringButon.jsx","../node_modules/@chakra-ui/form-control/src/form-control.tsx","../node_modules/@chakra-ui/form-control/src/use-form-control.ts","../node_modules/@chakra-ui/input/src/input.tsx","../node_modules/@chakra-ui/layout/src/divider.tsx","../node_modules/@chakra-ui/media-query/src/use-media-query.ts","../node_modules/@chakra-ui/react-use-controllable-state/src/index.ts"],"sourcesContent":["\nimport React from 'react';\nimport {\n  Box,\n  Flex,\n  HStack,\n  Link,\n  IconButton,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  useDisclosure,\n  useColorModeValue,\n  Stack,\n  Image\n\n} from '@chakra-ui/react';\nimport { ChevronDownIcon, HamburgerIcon, CloseIcon } from '@chakra-ui/icons';\nimport { Link as RouterLink } from 'react-router-dom';\nimport SpringButton from '../../../theme/SpringButon';\nimport LogoImage from '../../../assets/1.png';\n\nexport default function Header() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  // const history = useHistory();\n  return (\n    <Box bg=\"transparent\" px={8}>\n      <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\n        <IconButton\n          size={'md'}\n          mt=\"1.5rem\"\n          icon={isOpen ? <CloseIcon /> : <HamburgerIcon />}\n          aria-label={'Open Menu'}\n          display={{ md: 'none' }}\n          onClick={isOpen ? onClose : onOpen}\n        />\n        <HStack spacing={8} alignItems={'center'}>\n          <Link as={RouterLink} to=\"/\" _hover={{ boxShadow: \"5px\" }}>\n            <Image h='100px' pt=\"2em\"\n              objectFit='cover' src={LogoImage} alt=\"Logo\" /> {/* Use the Image component here */}\n          </Link>\n          <HStack\n            as={'nav'}\n            mt=\"1.5rem\"\n            spacing={4}\n            flexDirection={'row'}\n            display={{ base: isOpen ? 'flex' : 'none', md: 'flex', sm: 'none' }}>\n\n            <NavItem title=\"Mortgages\" routes={[\n              { name: 'Home Purchase', route: '/Mortgages/home-purchase' },\n              { name: 'Refinance', route: '/Mortgages/refinance' },\n              { name: 'Renewal', route: '/Mortgages/renewing' },\n              { name: 'Building/Construction', route: '/Mortgages/building' },\n\n            ]} />\n\n\n            <NavItem title=\"About\" routes={[\n              { name: 'About Us', route: '/about-page' },\n              { name: 'Contact Dora', route: '/contact-page' },\n              // Add all your routes\n            ]} />\n            <NavItem title=\"Resources\" routes={[\n              { name: 'FAQ', route: '/faq-page' },\n              { name: 'Glossary', route: '/glossary-page' },\n              { name: 'Documents You Need', route: '/doc-page' }\n              // Add all your routes\n            ]} />\n          </HStack>\n        </HStack>\n        <SpringButton as={RouterLink} to=\"/sign-in\" variant='outline' size={'sm'} mt=\"1.5rem\">Apply Now</SpringButton>\n      </Flex>\n      {isOpen ? (\n        <Box pb={4} display={{ md: 'none' }}>\n          <Stack as={'nav'} spacing={4}>\n            <NavItem title=\"Mortgages\" routes={[\n              { name: 'Home Purchase', route: '/Mortgages/home-purchase' },\n              { name: 'Refinance', route: '/Mortgages/refinance' },\n              { name: 'Renewal', route: '/Mortgages/renewing' },\n              { name: 'Building/Construction', route: '/Mortgages/building' },\n\n            ]} />\n\n\n            <NavItem title=\"About\" routes={[\n              { name: 'About Us', route: '/about-page' },\n              { name: 'Contact Us', route: '/contact-page' },\n              // Add all your routes\n            ]} />\n            <NavItem title=\"Resources\" routes={[\n              { name: 'FAQ', route: '/faq-page' },\n              { name: 'Glossary', route: '/glossary-page' },\n              { name: 'Documents You Need', route: '/doc-page' }\n\n            ]} />\n          </Stack>\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n\nconst NavItem = ({ title, routes }) => {\n  const bg = useColorModeValue('gray.200', 'gray.700');\n  return (\n    <Menu>\n      {({ isOpen }) => (\n        <>\n          <MenuButton\n            as={Link}\n            px={2}\n            py={1}\n            rounded={'md'}\n            transition={'all .3s ease'}\n            _expanded={{ bg }}\n            _hover={{ bg }}>\n            {title} <ChevronDownIcon ml={2} />\n          </MenuButton>\n          <MenuList>\n            {routes.map((item, idx) => (\n              <MenuItem as={RouterLink} to={item.route} key={idx}>\n                {item.name}\n              </MenuItem>\n            ))}\n          </MenuList>\n        </>\n      )}\n    </Menu>\n  )\n}","import React, { useState } from 'react';\nimport { Box, Input, Button, Text, VStack, useToast } from '@chakra-ui/react';\nimport axios from 'axios'\n\n\nconst Newsletter = () => {\n    const toast = useToast();\n\n\n    // I'm not using any of these functions as I've used a third party for email newsletters\n    const [formData, setFormData] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n      });\n\n      const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n          ...formData,\n          [name]: value,\n        });\n      };\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const form = e.target;\n        const isValidForm = form.checkValidity();\n  \n        if (isValidForm) {\n\n            try {\n                const response = await axios.post(`${process.env.REACT_APP_BACKEND}/api/auth/newsletter`, formData)\n                console.log(response)\n              } catch (err) {\n                console.error(err.message)\n              }\n           \n            toast({\n                title: \"Subscribed\",\n                description: \"You've been subscribed to our newsletter.\",\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n            });\n\n            // set form back to blank after submitting\n            setFormData({\n                firstName: '',\n                lastName: '',\n                email: '',\n              });\n        }\n    }\n\n    return (\n        <Box\n            flex=\"1\"\n            position=\"relative\"\n            maxHeight=\"90vh\"\n            margin=\"auto\"\n            minWidth=\"200px\"\n            overflowY=\"auto\"\n            // ml={[5, 2]}\n            mt={[-2]}\n            mr=\"3em\"\n           \n            p={5}\n            bg=\"gray.100\"\n            borderRadius=\"md\"\n            boxShadow=\"md\"\n            display=\"flex\"\n            // flexDirection={[\"column\", \"column\", \"row\"]}\n        >\n\n          \n            <Box as=\"form\" onSubmit={handleSubmit}>\n                <VStack spacing={2}>\n                    <Text fontWeight={'500'} fontSize={'lg'} mb={2}>Newsletter</Text>\n                    <iframe\n                        src=\"https://embeds.beehiiv.com/329b6cdf-adf5-4de2-84a1-4c556ec21cf0?slim=true\"\n                        data-test-id=\"beehiiv-embed\"\n                        height=\"52\"\n                        title=\"iframe\"\n                        frameBorder=\"0\"\n                        scrolling=\"no\"\n                        style={{\n                          margin: 0,\n                          borderRadius: '0px !important',\n                          backgroundColor: 'transparent'\n                        }}\n                      />\n                    {/* <Input type=\"text\" id=\"firstName\" bg=\"white\" name=\"firstName\" placeholder=\"First Name\"  value={formData.firstName} onChange={handleInputChange} required />\n                    <Input type=\"text\" id=\"lastName\" bg=\"white\" name=\"lastName\" placeholder=\"Last Name\" value={formData.lastName} onChange={handleInputChange} required />\n                    <Input type=\"email\" id=\"email\" bg=\"white\" name=\"email\" placeholder=\"Email\" value={formData.email} onChange={handleInputChange} required />\n                    <Button type=\"submit\">Sign Up</Button> */}\n                </VStack>\n            </Box>\n        </Box>\n    )\n}\n\nexport default Newsletter;","import {\n  Box,\n  Container,\n  Stack,\n  SimpleGrid,\n  Text,\n  Link,\n  VisuallyHidden,\n  chakra,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { FaTwitter, FaYoutube, FaInstagram, FaFacebook } from 'react-icons/fa';\nimport Newsletter from './Newsletter';\n// import AppStoreBadge from '@/components/AppStoreBadge';\n// import PlayStoreBadge from '@/components/PlayStoreBadge';\n\nconst ListHeader = ({ children }) => {\n  return (\n    <Text fontWeight={'500'} fontSize={'lg'} mb={2}>\n      {children}\n    </Text>\n  );\n};\n\nconst SocialButton = ({children, label, href}) => {\n  return (\n    <chakra.button\n      bg={useColorModeValue('blackAlpha.100', 'whiteAlpha.100')}\n      rounded={'full'}\n      w={8}\n      h={8}\n      cursor={'pointer'}\n      as={'a'}\n      href={href}\n      display={'inline-flex'}\n      alignItems={'center'}\n      justifyContent={'center'}\n      transition={'background 0.3s ease'}\n      _hover={{\n        bg: useColorModeValue('blackAlpha.200', 'whiteAlpha.200'),\n      }}>\n      <VisuallyHidden>{label}</VisuallyHidden>\n      {children}\n    </chakra.button>\n  );\n};\n\nexport default function LargeWithAppLinksAndSocial() {\n  return (\n    <Box pt={5}\n      bg={useColorModeValue('gray.50', 'gray.900')}\n      color={useColorModeValue('gray.700', 'gray.200')}>\n      <Container as={Stack} maxW={'6xl'} py={10}>\n        <SimpleGrid columns={{ base: 1, sm: 2, md: 4 }} spacing={8}>\n          <Stack align={'flex-start'}>\n            <ListHeader>Main Mortgage</ListHeader>\n            <Link href={'#'}>About Us</Link>\n            <Link href={'/contact-page'}>Contact Us</Link>\n            <Link href={'#'}>Why Choose a Mortgage Agent</Link>\n          </Stack>\n\n          <Stack align={'flex-start'}>\n            <ListHeader>Resources</ListHeader>\n            <Link href={'/faq-page'}>FAQ</Link>\n            <Link href={'/glossary-page'}>Glossary</Link>\n            <Link href={'/doc-page'}>Documents You Need</Link>\n            <Link href={'/apply-page'}>Apply Online</Link>\n          </Stack>\n\n          <Stack align={'flex-start'}>\n            <ListHeader>Legal</ListHeader>\n            <Link href={'#'}>Privacy Policy</Link>\n            <Link href={'#'}>Terms of Service</Link>\n\n          </Stack>\n\n          <Stack align={'flex-start'}>\n  <Newsletter />\n</Stack>\n        </SimpleGrid>\n      </Container>\n\n      <Box\n    borderTopWidth={1}\n    borderStyle={'solid'}\n    borderColor={useColorModeValue('gray.200', 'gray.700')}>\n    <Container\n      as={Stack}\n      maxW={'6xl'}\n      py={4}\n      direction={{ base: 'column', md: 'row' }}\n      spacing={4}\n      justify={{ md: 'space-between' }}\n      align={{ md: 'center' }}>\n      <Text fontSize=\"11\">© 2023 <b>VERICO The Mortgage Professionals</b> License 10280 All Rights Reserved.\n*some restrictions may apply\n</Text>\n<Text fontSize=\"11\">\nPowered by <a href=\"https://www.gomaxsolutions.com/\" style={{fontWeight: 'bold'}}>GoMAX Solutions</a>.\n</Text>\n<Text fontSize=\"11\">\nWebsite by <a href=\"https://www.linkedin.com/in/cassie-leclair-931093b6/\" style={{fontWeight: 'bold'}}>Cassie LeClair</a>\n\n</Text>\n<Link fontSize=\"11\" href={'/admin-signin'} style={{fontWeight: 'bold'}}>Admin</Link>\n      <Stack direction={'row'} spacing={6}>\n        <SocialButton label={'Twitter'} href={'#'}>\n          <FaFacebook />\n        </SocialButton>\n        {/* <SocialButton label={'YouTube'} href={'#'}>\n          <FaYoutube />\n        </SocialButton> */}\n        <SocialButton label={'Instagram'} href={'#'}>\n          <FaInstagram />\n        </SocialButton>\n      </Stack>\n    </Container>\n  </Box>\n    </Box>\n  );\n}","import React from 'react';\nimport { Box, Link, VStack, Heading, useMediaQuery } from '@chakra-ui/react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst resources = [\n  {name: 'FAQ', route: '/faq-page'},\n  {name: 'Glossary', route: '/glossary-page'},\n\n];\n\nconst ResourceCard = () => {\n    const [isLargerThan530] = useMediaQuery(\"(min-width: 530px)\");\n    return isLargerThan530 ? (\n  <Box \n    flex=\"1\" \n    position=\"sticky\" \n    top=\"0\" \n    maxHeight=\"90vh\" \n    minWidth=\"200px\"\n    overflowY=\"auto\"\n    ml={[5, 2]} \n    mt={[10, 5]} \n    p={5}\n    bg=\"gray.100\"\n    borderRadius=\"md\"\n    boxShadow=\"md\"\n  >\n    <Heading size=\"md\" mb={3}>Resources</Heading>\n    <VStack align=\"start\" spacing={2}>\n      {resources.map((res, index) => (\n        <Box \n          key={index} \n          p={3} \n          bg=\"white\" \n          width=\"100%\" \n          borderRadius=\"md\" \n          boxShadow=\"sm\"\n        >\n          <Link as={RouterLink} to={res.route}>{res.name}</Link>\n        </Box>\n      ))}\n    </VStack>\n  </Box>\n) : null;\n};\n\nexport default ResourceCard;","import React from 'react';\nimport { animated, useSpring } from 'react-spring';\nimport { Button as ChakraButton } from \"@chakra-ui/react\";\n\nconst AnimatedButton = animated(ChakraButton);\n\nconst SpringButton = ({ children, ...props }) => {\n    const [springProps, setSpringProps] = useSpring(() => ({\n        scale: 1,\n        config: { mass: 4, tension: 150, friction: 10 },\n        \n    }));\n\n    return (\n        <AnimatedButton\n            onMouseEnter={() => setSpringProps({ scale: 1.1 })}\n            onMouseLeave={() => setSpringProps({ scale: 1 })}\n            style={{\n                transform: springProps.scale.interpolate(scale => `scale(${scale})`),\n            }}\n            {...props}\n        >\n            {children}\n        </AnimatedButton>\n    );\n};\n\nexport default SpringButton;","import { createContext } from \"@chakra-ui/react-context\"\nimport { PropGetter } from \"@chakra-ui/react-types\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\"\nimport { useCallback, useId, useState } from \"react\"\n\nconst [FormControlStylesProvider, useFormControlStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `,\n})\n\nexport { useFormControlContext, useFormControlStyles }\n\nexport interface FormControlOptions {\n  /**\n   * If `true`, the form control will be required. This has 2 side effects:\n   * - The `FormLabel` will show a required indicator\n   * - The form element (e.g, Input) will have `aria-required` set to `true`\n   *\n   * @default false\n   */\n  isRequired?: boolean\n  /**\n   * If `true`, the form control will be disabled. This has 2 side effects:\n   * - The `FormLabel` will have `data-disabled` attribute\n   * - The form element (e.g, Input) will be disabled\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the form control will be invalid. This has 2 side effects:\n   * - The `FormLabel` and `FormErrorIcon` will have `data-invalid` set to `true`\n   * - The form element (e.g, Input) will have `aria-invalid` set to `true`\n   *\n   * @default false\n   */\n  isInvalid?: boolean\n  /**\n   * If `true`, the form control will be readonly\n   *\n   * @default false\n   */\n  isReadOnly?: boolean\n}\n\ninterface FormControlContext extends FormControlOptions {\n  /**\n   * The label text used to inform users as to what information is\n   * requested for a text field.\n   */\n  label?: string\n  /**\n   * The custom `id` to use for the form control. This is passed directly to the form element (e.g, Input).\n   * - The form element (e.g. Input) gets the `id`\n   * - The form label id: `form-label-${id}`\n   * - The form error text id: `form-error-text-${id}`\n   * - The form helper text id: `form-helper-text-${id}`\n   */\n  id?: string\n}\n\ntype FormControlProviderContext = Omit<\n  ReturnType<typeof useFormControlProvider>,\n  \"getRootProps\" | \"htmlProps\"\n>\n\nconst [FormControlProvider, useFormControlContext] =\n  createContext<FormControlProviderContext>({\n    strict: false,\n    name: \"FormControlContext\",\n  })\n\nfunction useFormControlProvider(props: FormControlContext) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props\n\n  // Generate all the required ids\n  const uuid = useId()\n  const id = idProp || `field-${uuid}`\n\n  const labelId = `${id}-label`\n  const feedbackId = `${id}-feedback`\n  const helpTextId = `${id}-helptext`\n\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the `aria-describedby` of the `input`.\n   */\n  const [hasFeedbackText, setHasFeedbackText] = useState(false)\n\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the `aria-describedby` of the `input`.\n   */\n  const [hasHelpText, setHasHelpText] = useState(false)\n\n  // Track whether the form element (e.g, `input`) has focus.\n  const [isFocused, setFocus] = useState(false)\n\n  const getHelpTextProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props,\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node) return\n        setHasHelpText(true)\n      }),\n    }),\n    [helpTextId],\n  )\n\n  const getLabelProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props.id !== undefined ? props.id : labelId,\n      htmlFor: props.htmlFor !== undefined ? props.htmlFor : id,\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId],\n  )\n\n  const getErrorMessageProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props,\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node) return\n        setHasFeedbackText(true)\n      }),\n      \"aria-live\": \"polite\",\n    }),\n    [feedbackId],\n  )\n\n  const getRootProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\",\n    }),\n    [htmlProps],\n  )\n\n  const getRequiredIndicatorProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props.children || \"*\",\n    }),\n    [],\n  )\n\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps,\n  }\n}\n\nexport interface FormControlProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"FormControl\">,\n    FormControlContext {}\n\n/**\n * FormControl provides context such as\n * `isInvalid`, `isDisabled`, and `isRequired` to form elements.\n *\n * This is commonly used in form elements such as `input`,\n * `select`, `textarea`, etc.\n *\n * @see Docs https://chakra-ui.com/docs/components/form-control\n */\nexport const FormControl = forwardRef<FormControlProps, \"div\">(\n  function FormControl(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props)\n    const ownProps = omitThemingProps(props)\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps)\n\n    const className = cx(\"chakra-form-control\", props.className)\n\n    return (\n      <FormControlProvider value={context}>\n        <FormControlStylesProvider value={styles}>\n          <chakra.div\n            {...getRootProps({}, ref)}\n            className={className}\n            __css={styles[\"container\"]}\n          />\n        </FormControlStylesProvider>\n      </FormControlProvider>\n    )\n  },\n)\n\nFormControl.displayName = \"FormControl\"\n\nexport interface FormHelperTextProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * FormHelperText\n *\n * Assistive component that conveys additional guidance\n * about the field, such as how it will be used and what\n * types in values should be provided.\n */\nexport const FormHelperText = forwardRef<FormHelperTextProps, \"div\">(\n  function FormHelperText(props, ref) {\n    const field = useFormControlContext()\n    const styles = useFormControlStyles()\n    const className = cx(\"chakra-form__helper-text\", props.className)\n    return (\n      <chakra.div\n        {...field?.getHelpTextProps(props, ref)}\n        __css={styles.helperText}\n        className={className}\n      />\n    )\n  },\n)\n\nFormHelperText.displayName = \"FormHelperText\"\n","import { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport { FormControlOptions, useFormControlContext } from \"./form-control\"\n\nexport interface UseFormControlProps<T extends HTMLElement>\n  extends FormControlOptions {\n  id?: string\n  onFocus?: React.FocusEventHandler<T>\n  onBlur?: React.FocusEventHandler<T>\n  disabled?: boolean\n  readOnly?: boolean\n  required?: boolean\n  \"aria-describedby\"?: string\n}\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n *\n * @internal\n */\nexport function useFormControl<T extends HTMLElement>(\n  props: UseFormControlProps<T>,\n) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } =\n    useFormControlProps(props)\n\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly),\n  }\n}\n\n/**\n * @internal\n */\nexport function useFormControlProps<T extends HTMLElement>(\n  props: UseFormControlProps<T>,\n) {\n  const field = useFormControlContext()\n\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props\n\n  const labelIds: string[] = props[\"aria-describedby\"]\n    ? [props[\"aria-describedby\"]]\n    : []\n\n  // Error message must be described first in all scenarios.\n  if (field?.hasFeedbackText && field?.isInvalid) {\n    labelIds.push(field.feedbackId)\n  }\n\n  if (field?.hasHelpText) {\n    labelIds.push(field.helpTextId)\n  }\n\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || undefined,\n    id: id ?? field?.id,\n    isDisabled: disabled ?? isDisabled ?? field?.isDisabled,\n    isReadOnly: readOnly ?? isReadOnly ?? field?.isReadOnly,\n    isRequired: required ?? isRequired ?? field?.isRequired,\n    isInvalid: isInvalid ?? field?.isInvalid,\n    onFocus: callAllHandlers(field?.onFocus, onFocus),\n    onBlur: callAllHandlers(field?.onBlur, onBlur),\n  }\n}\n","import { FormControlOptions, useFormControl } from \"@chakra-ui/form-control\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\ninterface InputOptions {\n  /**\n   * The border color when the input is focused. Use color keys in `theme.colors`\n   * @example\n   * focusBorderColor = \"blue.500\"\n   */\n  focusBorderColor?: string\n  /**\n   * The border color when the input is invalid. Use color keys in `theme.colors`\n   * @example\n   * errorBorderColor = \"red.500\"\n   */\n  errorBorderColor?: string\n  /**\n   * The native HTML `size` attribute to be passed to the `input`\n   */\n  htmlSize?: number\n}\n\ntype Omitted = \"disabled\" | \"required\" | \"readOnly\" | \"size\"\n\nexport interface InputProps\n  extends Omit<HTMLChakraProps<\"input\">, Omitted>,\n    InputOptions,\n    ThemingProps<\"Input\">,\n    FormControlOptions {}\n\n/**\n * Input\n *\n * Element that allows users enter single valued data.\n *\n * @see Docs https://chakra-ui.com/docs/components/input\n */\nexport const Input = forwardRef<InputProps, \"input\">(function Input(\n  props,\n  ref,\n) {\n  const { htmlSize, ...rest } = props\n\n  const styles = useMultiStyleConfig(\"Input\", rest)\n  const ownProps = omitThemingProps(rest)\n  const input = useFormControl<HTMLInputElement>(ownProps)\n  const _className = cx(\"chakra-input\", props.className)\n\n  return (\n    <chakra.input\n      size={htmlSize}\n      {...input}\n      __css={styles.field}\n      ref={ref}\n      className={_className}\n    />\n  )\n})\n\nInput.displayName = \"Input\"\n\n// This is used in `input-group.tsx`\nInput.id = \"Input\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\n/**\n * Layout component used to visually separate content in a list or group.\n * It displays a thin horizontal or vertical line, and renders a `hr` tag.\n *\n * @see Docs https://chakra-ui.com/divider\n */\nexport const Divider = forwardRef<DividerProps, \"hr\">(function Divider(\n  props,\n  ref,\n) {\n  const {\n    borderLeftWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderWidth,\n    borderStyle,\n    borderColor,\n    ...styles\n  } = useStyleConfig(\"Divider\", props)\n  const {\n    className,\n    orientation = \"horizontal\",\n    __css,\n    ...rest\n  } = omitThemingProps(props)\n\n  const dividerStyles = {\n    vertical: {\n      borderLeftWidth:\n        borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\",\n    },\n    horizontal: {\n      borderBottomWidth:\n        borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\",\n    },\n  }\n\n  return (\n    <chakra.hr\n      ref={ref}\n      aria-orientation={orientation}\n      {...rest}\n      __css={{\n        ...styles,\n        border: \"0\",\n\n        borderColor,\n        borderStyle,\n        ...dividerStyles[orientation],\n        ...__css,\n      }}\n      className={cx(\"chakra-divider\", className)}\n    />\n  )\n})\n\nexport interface DividerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Divider\"> {\n  orientation?: \"horizontal\" | \"vertical\"\n}\n\nDivider.displayName = \"Divider\"\n","import { useEnvironment } from \"@chakra-ui/react-env\"\nimport { useEffect, useState } from \"react\"\n\nexport type UseMediaQueryOptions = {\n  fallback?: boolean | boolean[]\n  ssr?: boolean\n}\n\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n * @param options the media query options { fallback, ssr }\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-media-query\n */\nexport function useMediaQuery(\n  query: string | string[],\n  options: UseMediaQueryOptions = {},\n): boolean[] {\n  const { ssr = true, fallback } = options\n\n  const { getWindow } = useEnvironment()\n\n  const queries = Array.isArray(query) ? query : [query]\n\n  let fallbackValues = Array.isArray(fallback) ? fallback : [fallback]\n  fallbackValues = fallbackValues.filter((v) => v != null) as boolean[]\n\n  const [value, setValue] = useState(() => {\n    return queries.map((query, index) => ({\n      media: query,\n      matches: ssr\n        ? !!fallbackValues[index]\n        : getWindow().matchMedia(query).matches,\n    }))\n  })\n\n  useEffect(() => {\n    const win = getWindow()\n    setValue(\n      queries.map((query) => ({\n        media: query,\n        matches: win.matchMedia(query).matches,\n      })),\n    )\n\n    const mql = queries.map((query) => win.matchMedia(query))\n\n    const handler = (evt: MediaQueryListEvent) => {\n      setValue((prev) => {\n        return prev.slice().map((item) => {\n          if (item.media === evt.media) return { ...item, matches: evt.matches }\n          return item\n        })\n      })\n    }\n\n    mql.forEach((mql) => {\n      if (typeof mql.addListener === \"function\") {\n        mql.addListener(handler)\n      } else {\n        mql.addEventListener(\"change\", handler)\n      }\n    })\n\n    return () => {\n      mql.forEach((mql) => {\n        if (typeof mql.removeListener === \"function\") {\n          mql.removeListener(handler)\n        } else {\n          mql.removeEventListener(\"change\", handler)\n        }\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getWindow])\n\n  return value.map((item) => item.matches)\n}\n","import { useMemo, useState } from \"react\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\n\n/**\n * Given a prop value and state value, the useControllableProp hook is used to determine whether a component is controlled or uncontrolled, and also returns the computed value.\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-controllable#usecontrollableprop\n */\nexport function useControllableProp<T>(prop: T | undefined, state: T) {\n  const controlled = typeof prop !== \"undefined\"\n  const value = controlled ? prop : state\n  return useMemo<[boolean, T]>(() => [controlled, value], [controlled, value])\n}\n\nexport interface UseControllableStateProps<T> {\n  value?: T\n  defaultValue?: T | (() => T)\n  onChange?: (value: T) => void\n  shouldUpdate?: (prev: T, next: T) => boolean\n}\n\n/**\n * The `useControllableState` hook returns the state and function that updates the state, just like React.useState does.\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-controllable#usecontrollablestate\n */\nexport function useControllableState<T>(props: UseControllableStateProps<T>) {\n  const {\n    value: valueProp,\n    defaultValue,\n    onChange,\n    shouldUpdate = (prev, next) => prev !== next,\n  } = props\n\n  const onChangeProp = useCallbackRef(onChange)\n  const shouldUpdateProp = useCallbackRef(shouldUpdate)\n\n  const [uncontrolledState, setUncontrolledState] = useState(defaultValue as T)\n  const controlled = valueProp !== undefined\n  const value = controlled ? valueProp : uncontrolledState\n\n  const setValue = useCallbackRef(\n    (next: React.SetStateAction<T>) => {\n      const setter = next as (prevState?: T) => T\n      const nextValue = typeof next === \"function\" ? setter(value) : next\n\n      if (!shouldUpdateProp(value, nextValue)) {\n        return\n      }\n\n      if (!controlled) {\n        setUncontrolledState(nextValue)\n      }\n\n      onChangeProp(nextValue)\n    },\n    [controlled, onChangeProp, value, shouldUpdateProp],\n  )\n\n  return [value, setValue] as [T, React.Dispatch<React.SetStateAction<T>>]\n}\n"],"names":["Header","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_jsxs","Box","bg","px","children","Flex","h","alignItems","justifyContent","_jsx","IconButton","size","mt","icon","CloseIcon","HamburgerIcon","display","md","onClick","HStack","spacing","Link","as","RouterLink","to","_hover","boxShadow","Image","pt","objectFit","src","LogoImage","alt","flexDirection","base","sm","NavItem","title","routes","name","route","SpringButton","variant","pb","Stack","_ref","useColorModeValue","Menu","_ref2","_Fragment","MenuButton","py","rounded","transition","_expanded","ChevronDownIcon","ml","MenuList","map","item","idx","MenuItem","toast","useToast","_useState","useState","firstName","lastName","email","_useState2","_slicedToArray","formData","setFormData","flex","position","maxHeight","margin","minWidth","overflowY","mr","p","borderRadius","onSubmit","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","form","response","wrap","_context","prev","next","preventDefault","target","checkValidity","axios","post","concat","process","sent","console","log","t0","error","message","description","status","duration","isClosable","stop","apply","arguments","VStack","Text","fontWeight","fontSize","mb","height","frameBorder","scrolling","style","backgroundColor","ListHeader","SocialButton","label","href","chakra","button","w","cursor","VisuallyHidden","LargeWithAppLinksAndSocial","color","Container","maxW","SimpleGrid","columns","align","Newsletter","borderTopWidth","borderStyle","borderColor","direction","justify","FaFacebook","FaInstagram","resources","_useMediaQuery","useMediaQuery","top","Heading","res","index","width","AnimatedButton","animated","ChakraButton","props","_objectWithoutProperties","_excluded","_useSpring","useSpring","scale","config","mass","tension","friction","_useSpring2","springProps","setSpringProps","_objectSpread","onMouseEnter","onMouseLeave","transform","interpolate","_createContext","createContext","errorMessage","_createContext2","FormControlStylesProvider","useFormControlStyles","_createContext3","strict","_createContext4","FormControlProvider","useFormControlContext","FormControl","forwardRef","ref","styles","useMultiStyleConfig","_useFormControlProvid","idProp","id","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","_useState3","_useState4","hasHelpText","setHasHelpText","_useState5","_useState6","isFocused","setFocus","getHelpTextProps","useCallback","props2","length","undefined","forwardedRef","mergeRefs","node","getLabelProps","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","onFocus","onBlur","useFormControlProvider","omitThemingProps","context","_excluded2","className","cx","jsx","value","div","__css","displayName","field","helperText","useFormControl","_useFormControlProps","useFormControlProps","rest","disabled","readOnly","required","ariaAttr","_a","_b","_c","labelIds","push","join","callAllHandlers","Input","htmlSize","ownProps","input","_className","Divider","_useStyleConfig","useStyleConfig","borderLeftWidth","borderBottomWidth","borderRightWidth","borderWidth","_omitThemingProps","_omitThemingProps$ori","orientation","dividerStyles","vertical","horizontal","hr","border","query","options","_options$ssr","ssr","fallback","getWindow","useEnvironment","queries","Array","isArray","fallbackValues","filter","v","query2","media","matches","matchMedia","setValue","useEffect","win","mql","handler","evt","slice","forEach","mql2","addListener","addEventListener","removeListener","removeEventListener","useControllableState","valueProp","defaultValue","onChange","_props$shouldUpdate","shouldUpdate","onChangeProp","useCallbackRef","shouldUpdateProp","uncontrolledState","setUncontrolledState","controlled","nextValue"],"sourceRoot":""}